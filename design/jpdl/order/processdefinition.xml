<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="order">


	<start-state name="生成订单">
		<transition to="付款方式"></transition>
	</start-state>


	<task-node name="订单出库(1库)">
		<task name="订单出库(1库)">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;A&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/SaleStoreOut.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{storeHome.getStoreRole('A')}"></assignment>
		</task>
		<transition to="订单发货(1库)"></transition>
	</task-node>

	<task-node name="订单收款">
		<task name="订单收款">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;,&quot;#{calendarBean.convertCurrency(orderHome.instance.shortageMoney)}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}(#{messages[orderHome.instance.payType.name()]})&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/finance/ReceivablesOfOrder.xhtml&quot;}
			</description>
			<assignment pooled-actors="erp.finance.cashier"></assignment>
		</task>
		<transition to="调度判断"></transition>
	</task-node>

	<task-node name="客户收货确认">
		<task name="客户收货确认">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/sale/OrderCommodityConfirm.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{orderHome.instance.customer.customerArea.role}"></assignment>
		</task>
		<event type="process-start">
			<mail actors=""></mail>
		</event>
		<transition to="订单完成"></transition>
	</task-node>

	<task-node name="订单出库(2库)">
		<task name="订单出库(2库)">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;B&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/SaleStoreOut.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{storeHome.getStoreRole('B')}"></assignment>
		</task>
		<transition to="订单发货(2库)"></transition>
	</task-node>

	<task-node name="订单出库(天津)">
		<task name="订单出库(天津)">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;C&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/SaleStoreOut.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{storeHome.getStoreRole('C')}"></assignment>
		</task>
		<transition to="订单发货(天津)"></transition>
	</task-node>

	<join name="join3">
		<transition to="发货情况判断"></transition>
	</join>

	<fork name="fork2">
		<transition to="出库判断(1库)" name="出库(1库)"></transition>
		<transition to="出库判断(2库)" name="出库(2库)"></transition>
		<transition to="出库判断(天津)" name="出库(天冿)"></transition>
		<transition to="出库判断(公司)" name="出库(公司)"></transition>
	</fork>

	<decision name="出库判断(1库)">
		<transition to="出库完成(1库)">
			<condition expression="#{not needResHome.needStoreOut('A')}"></condition>
		</transition>
		<transition to="订单出库(1库)" name="出库">
			<condition expression="#{needResHome.needStoreOut('A')}"></condition>
		</transition>
	</decision>

	<task-node name="订单调度">
		<task name="订单调度">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/SaleDispatch.xhtml&quot;}
			</description>
			<assignment pooled-actors="erp.storage.dispatch"></assignment>
		</task>
		<transition to="fork2"></transition>
	</task-node>

	<decision name="出库判断(2库)">
		<transition to="订单出库(2库)" name="出库">
			<condition expression="#{needResHome.needStoreOut('B')}"></condition>
		</transition>
		<transition to="出库完成(2库)">
			<condition expression="#{not needResHome.needStoreOut('B')}"></condition>
		</transition>
	</decision>

	<decision name="出库判断(天津)">
		<transition to="订单出库(天津)" name="出库">
			<condition expression="#{needResHome.needStoreOut('C')}"></condition>
		</transition>
		<transition to="出库完成(天津)">
			<condition expression="#{not needResHome.needStoreOut('C')}"></condition>
		</transition>
	</decision>

	<node name="出库完成(1库)">
		<transition to="join3"></transition>
	</node>

	<node name="出库完成(2库)">
		<transition to="join3"></transition>
	</node>

	<node name="出库完成(天津)">
		<transition to="join3"></transition>
	</node>

	<decision name="付款方式">
		<transition to="订单收款" name="款到发货">
			<condition expression="#{orderHome.instance.payType eq 'PAY_FIRST'}"></condition>
		</transition>
		<transition to="调度判断" name="先货">
			<condition expression="#{(not (orderHome.instance.payType eq 'PAY_FIRST')) and (not orderHome.instance.earnestFirst)}"></condition>
		</transition>
		<transition to="订金收款" name="订金发货">
			<condition expression="#{not (orderHome.instance.payType eq 'PAY_FIRST') and (orderHome.instance.earnestFirst)}"></condition>
		</transition>
	</decision>

	<task-node name="订金收款">
		<task name="订金收款">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;], &quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/finance/ReceiveOrderEarnest.xhtml&quot;}
			</description>
			<assignment pooled-actors="erp.finance.cashier"></assignment>
		</task>
		<transition to="调度判断"></transition>
	</task-node>

	<task-node name="订单发货(1库)">
		<task name="订单发货(一库)">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;A&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/OrderShip.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{orderHome.instance.customer.customerArea.role}"></assignment>
		</task>
		<transition to="出库完成(1库)"></transition>
	</task-node>

	<task-node name="订单发货(2库)">
		<task name="订单发货(2库)">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;B&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/OrderShip.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{orderHome.instance.customer.customerArea.role}"></assignment>
		</task>
		<transition to="出库完成(2库)"></transition>
	</task-node>

	<task-node name="订单发货(天津)">
		<task name="订单发货(天津)">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;C&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/OrderShip.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{orderHome.instance.customer.customerArea.role}"></assignment>
		</task>
		<transition to="出库完成(天津)"></transition>
	</task-node>

	<decision name="调度判断">
		<transition to="fork2" name="已调度">
			<condition expression="#{orderHome.lastNeedRes.status eq 'DISPATCHED'}"></condition>
		</transition>
		<transition to="订单调度">
			<condition expression="#{not (orderHome.lastNeedRes.status eq 'DISPATCHED')}"></condition>
		</transition>
	</decision>

	<decision name="发货情况判断">
		<transition to="客户收货确认" name="全部发货">
			<condition expression="#{orderHome.instance.allStoreOut}"></condition>
		</transition>
		<transition to="订单更改" name="订单更改">
			<condition expression="#{not orderHome.instance.allStoreOut}"></condition>
		</transition>
	</decision>

	<decision name="重新发货判断">
		<transition to="调度判断" name="需要补发">
			<condition expression="#{not orderHome.instance.allStoreOut}"></condition>
		</transition>
		<transition to="客户收货确认" name="无补发">
			<condition expression="#{orderHome.instance.allStoreOut}"></condition>
		</transition>
	</decision>

	<task-node name="订单更改">
		<task name="订单更改">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/sale/OrderChange.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{orderHome.instance.customer.customerArea.role}"></assignment>
		</task>
		<transition to="重新发货判断"></transition>
	</task-node>

	<decision name="出库判断(公司)">
		<transition to="订单出库(公司)" name="出库">
			<condition expression="#{needResHome.needStoreOut('D')}"></condition>
		</transition>
		<transition to="出库完成(公司)" name="无出库">
			<condition expression="#{not needResHome.needStoreOut('D')}"></condition>
		</transition>
	</decision>

	<task-node name="订单出库(公司)">
		<task name="订单出库(公司)">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;D&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/SaleStoreOut.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{storeHome.getStoreRole('D')}"></assignment>
		</task>
		<transition to="订单发货(公司)"></transition>
	</task-node>

	<node name="出库完成(公司)">
		<transition to="join3"></transition>
	</node>

	<task-node name="订单发货(公司)">
		<task name="订单发货(公司)">
			<description>
				{&quot;businessName&quot;:&quot;销售订单&quot;,&quot;businessKey&quot;:&quot;#{orderHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderHome.instance.customer.customerArea.name}&quot;],&quot;description&quot;:&quot;#{orderHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;D&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/OrderShip.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{orderHome.instance.customer.customerArea.role}"></assignment>
		</task>
		<transition to="出库完成(公司)"></transition>
	</task-node>


	<end-state name="订单完成"></end-state>


</process-definition>