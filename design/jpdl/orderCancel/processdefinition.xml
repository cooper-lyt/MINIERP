<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="orderCancel">


	<start-state name="退货">
		<transition to="调度判断"></transition>
	</start-state>


	<task-node name="退货入库(1库)">
		<task name="退货入库(1库)">
			<description>
				{&quot;businessName&quot;:&quot;退货&quot;,&quot;businessKey&quot;:&quot;#{orderBackHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderBackHome.instance.customer.name}&quot;],&quot;description&quot;:&quot;#{orderBackHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;A&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/StoreResBackStoreIn.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{storeHome.getStoreRole('A')}"></assignment>
		</task>
		<transition to="入库完成(1库)"></transition>
	</task-node>

	<decision name="退款判断">
		<transition to="退款">
			<condition expression="#{not orderBackHome.instance.moneyComplete}"></condition>
		</transition>
		<transition to="结束" name="无须退款">
			<condition expression="#{orderBackHome.instance.moneyComplete}"></condition>
		</transition>
	</decision>

	<fork name="fork2">
		<transition to="入库判断(1库)" name="入库(1库)"></transition>
		<transition to="入库判断(2库)" name="入库(2库)"></transition>
		<transition to="入库判断(天津)" name="入库(天津)"></transition>
		<transition to="入库判断(公司)" name="入库(公司)"></transition>
		<transition to="入库判断（二厂分水器）" name="入库（二厂分水器）"></transition>
	</fork>

	<join name="join2">
		<transition to="退货确认"></transition>
	</join>

	<node name="入库完成(1库)">
		<transition to="join2"></transition>
	</node>

	<node name="入库完成(2库)">
		<transition to="join2"></transition>
	</node>

	<node name="入库完成(天津)">
		<transition to="join2"></transition>
	</node>

	<decision name="入库判断(1库)">
		<transition to="退货入库(1库)" name="入库">
			<condition expression="#{orderBackHome.needStoreIn('A')}"></condition>
		</transition>
		<transition to="入库完成(1库)">
			<condition expression="#{not orderBackHome.needStoreIn('A')}"></condition>
		</transition>
	</decision>

	<decision name="入库判断(2库)">
		<transition to="入库完成(2库)">
			<condition expression="#{not orderBackHome.needStoreIn('B')}"></condition>
		</transition>
		<transition to="退货入库(2库)" name="入库">
			<condition expression="#{orderBackHome.needStoreIn('B')}"></condition>
		</transition>
	</decision>

	<decision name="入库判断(天津)">
		<transition to="退货入库(天津)" name="入库">
			<condition expression="#{orderBackHome.needStoreIn('C')}"></condition>
		</transition>
		<transition to="入库完成(天津)">
			<condition expression="#{not orderBackHome.needStoreIn('C')}"></condition>
		</transition>
	</decision>

	<task-node name="退货入库(2库)">
		<task name="退货入库(2库)">
			<description>
				{&quot;businessName&quot;:&quot;退货&quot;,&quot;businessKey&quot;:&quot;#{orderBackHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderBackHome.instance.customer.name}&quot;],&quot;description&quot;:&quot;#{orderBackHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;B&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/StoreResBackStoreIn.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{storeHome.getStoreRole('B')}"></assignment>
		</task>
		<transition to="入库完成(2库)"></transition>
	</task-node>

	<task-node name="退货入库(天津)">
		<task name="退货入库(天津)">
			<description>
				{&quot;businessName&quot;:&quot;退货&quot;,&quot;businessKey&quot;:&quot;#{orderBackHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderBackHome.instance.customer.name}&quot;],&quot;description&quot;:&quot;#{orderBackHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;C&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/StoreResBackStoreIn.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{storeHome.getStoreRole('C')}"></assignment>
		</task>
		<transition to="入库完成(天津)"></transition>
	</task-node>

	<task-node name="退货调度">
		<task name="退货调度">
			<description>
				{&quot;businessName&quot;:&quot;退货&quot;,&quot;businessKey&quot;:&quot;#{orderBackHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderBackHome.instance.customer.name}&quot;],&quot;description&quot;:&quot;#{orderBackHome.instance.customer.name}&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/StoreResBackDispatch.xhtml&quot;}
			</description>
			<assignment pooled-actors="erp.storage.dispatch"></assignment>
		</task>
		<transition to="fork2"></transition>
	</task-node>

	<decision name="调度判断">
		<transition to="退货调度">
			<condition expression="#{not storeResBackCreate.instance.dispatched}"></condition>
		</transition>
		<transition to="fork2" name="已调度">
			<condition expression="#{storeResBackCreate.instance.dispatched}"></condition>
		</transition>
	</decision>

	<task-node name="退货确认">
		<task name="退货确认">
			<description>
				{&quot;businessName&quot;:&quot;退货&quot;,&quot;businessKey&quot;:&quot;#{orderBackHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderBackHome.instance.customer.name}&quot;],&quot;description&quot;:&quot;#{orderBackHome.instance.customer.name}&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/sale/ResBackConfirm.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{orderBackHome.instance.customer.customerArea.role}"></assignment>
		</task>
		<transition to="退款判断"></transition>
	</task-node>

	<decision name="入库判断(公司)">
		<transition to="退货入库(公司)" name="入库">
			<condition expression="#{orderBackHome.needStoreIn('D')}"></condition>
		</transition>
		<transition to="入库完成(公司)" name="完成">
			<condition expression="#{not orderBackHome.needStoreIn('D')}"></condition>
		</transition>
	</decision>

	<task-node name="退货入库(公司)">
		<task name="退货入库(公司)">
			<description>
				{&quot;businessName&quot;:&quot;退货&quot;,&quot;businessKey&quot;:&quot;#{orderBackHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderBackHome.instance.customer.name}&quot;],&quot;description&quot;:&quot;#{orderBackHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;D&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/StoreResBackStoreIn.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{storeHome.getStoreRole('A')}"></assignment>
		</task>
		<transition to="入库完成(公司)"></transition>
	</task-node>

	<node name="入库完成(公司)">
		<transition to="join2"></transition>
	</node>

	<task-node name="退款">
		<task name="退款">
			<description>
				{&quot;businessName&quot;:&quot;退货&quot;,&quot;businessKey&quot;:&quot;#{orderBackHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderBackHome.instance.customer.name}&quot;],&quot;description&quot;:&quot;#{orderBackHome.instance.customer.name}&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/finance/CancelOrderMoneyBack.xhtml&quot;}
			</description>
			<assignment pooled-actors="erp.finance.cashier"></assignment>
		</task>
		<transition to="结束"></transition>
	</task-node>

	<decision name="入库判断（二厂分水器）">
		<transition to="退货入库(二厂分水器)" name="入库">
			<condition expression="#{orderBackHome.needStoreIn('5')}"></condition>
		</transition>
		<transition to="入库完成(二厂分水器)" name="完成">
			<condition expression="#{not orderBackHome.needStoreIn('5')}"></condition>
		</transition>
	</decision>

	<task-node name="退货入库(二厂分水器)">
		<task name="退货入库(二厂分水器)">
			<description>
				{&quot;businessName&quot;:&quot;退货&quot;,&quot;businessKey&quot;:&quot;#{orderBackHome.instance.id}&quot;,&quot;tags&quot;:[&quot;#{orderBackHome.instance.customer.name}&quot;],&quot;description&quot;:&quot;#{orderBackHome.instance.customer.name}&quot;,&quot;storeId&quot;:&quot;5&quot;,&quot;operPage&quot;:&quot;/business/taskOperator/erp/store/StoreResBackStoreIn.xhtml&quot;}
			</description>
			<assignment pooled-actors="#{storeHome.getStoreRole('5')}"></assignment>
		</task>
		<transition to="入库完成(二厂分水器)"></transition>
	</task-node>

	<node name="入库完成(二厂分水器)">
		<transition to="join2"></transition>
	</node>


	<end-state name="结束"></end-state>


</process-definition>