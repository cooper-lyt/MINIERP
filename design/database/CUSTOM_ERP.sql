SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS MINI_ERP.ORDER_FEE;
DROP TABLE IF EXISTS MINI_ERP.SUPPLIER_RES;
DROP TABLE IF EXISTS MINI_ERP.FORMAT;
DROP TABLE IF EXISTS MINI_ERP.FORMAT_DEFINE;
DROP TABLE IF EXISTS MINI_ERP.RES_SALE_REBATE;
DROP TABLE IF EXISTS MINI_ERP.STORE_RES_REBATE;
DROP TABLE IF EXISTS MINI_ERP.ORDER_ITEM_REBATE;
DROP TABLE IF EXISTS MINI_ERP.PRODUCT_GROUP_RES;
DROP TABLE IF EXISTS MINI_ERP.SALER_STORE_RES_PRICE;
DROP TABLE IF EXISTS MINI_ERP.SALER_PRICE;
DROP TABLE IF EXISTS MINI_ERP.OWE_OUT;
DROP TABLE IF EXISTS MINI_ERP.NO_CONVERT_COUNT;
DROP TABLE IF EXISTS MINI_ERP.INVENTORY_ITEM;
DROP TABLE IF EXISTS MINI_ERP.STOCK_CHANGE_ITEM;
DROP TABLE IF EXISTS MINI_ERP.PRICE_ITEM;
DROP TABLE IF EXISTS MINI_ERP.PREPARE_STOCK_CHANGE;
DROP TABLE IF EXISTS MINI_ERP.STOCK;
DROP TABLE IF EXISTS MINI_ERP.MATERIAL_STORE_OUT;
DROP TABLE IF EXISTS MINI_ERP.BATCH;
DROP TABLE IF EXISTS MINI_ERP.ALLOCATION_RES;
DROP TABLE IF EXISTS MINI_ERP.BACK_ITEM;
DROP TABLE IF EXISTS MINI_ERP.ORDER_ITEM;
DROP TABLE IF EXISTS MINI_ERP.STORE_RES;
DROP TABLE IF EXISTS MINI_ERP.RES;
DROP TABLE IF EXISTS MINI_ERP.ACCOUNTING;
DROP TABLE IF EXISTS MINI_ERP.ACCOUNT_CHECK_OUT;
DROP TABLE IF EXISTS MINI_ERP.ACCOUNT_OPER;
DROP TABLE IF EXISTS MINI_ERP.ALLOCATION;
DROP TABLE IF EXISTS MINI_ERP.ASSEMBLY;
DROP TABLE IF EXISTS MINI_ERP.BACK_DISPATCH;
DROP TABLE IF EXISTS MINI_ERP.MONEY_SAVE;
DROP TABLE IF EXISTS MINI_ERP.BANK_ACCOUNT;
DROP TABLE IF EXISTS MINI_ERP.DISPATCH;
DROP TABLE IF EXISTS MINI_ERP.CARS;
DROP TABLE IF EXISTS MINI_ERP.CERTIFICATE_ITEM;
DROP TABLE IF EXISTS MINI_ERP.CHECK_OUT;
DROP TABLE IF EXISTS MINI_ERP.NEED_RES;
DROP TABLE IF EXISTS MINI_ERP.MIDDLE_MONEY_PAY;
DROP TABLE IF EXISTS MINI_ERP.ORDER_REDUCE;
DROP TABLE IF EXISTS MINI_ERP.CUSTOMER_ORDER;
DROP TABLE IF EXISTS MINI_ERP.CUSTOMER_CONTACT;
DROP TABLE IF EXISTS MINI_ERP.ORDER_BACK;
DROP TABLE IF EXISTS MINI_ERP.QUOTED_PRICE;
DROP TABLE IF EXISTS MINI_ERP.CUSTOMER;
DROP TABLE IF EXISTS MINI_ERP.CUSTOMER_AREA;
DROP TABLE IF EXISTS MINI_ERP.CUSTOMER_LEVEL;
DROP TABLE IF EXISTS MINI_ERP.PRODUCT_STORE_IN;
DROP TABLE IF EXISTS MINI_ERP.PRODUCT_GROUP;
DROP TABLE IF EXISTS MINI_ERP.FACTORY;
DROP TABLE IF EXISTS MINI_ERP.INVENTORY;
DROP TABLE IF EXISTS MINI_ERP.MATERIAL_BACK_STORE_IN;
DROP TABLE IF EXISTS MINI_ERP.MATERIAL_STORE_IN;
DROP TABLE IF EXISTS MINI_ERP.MIDDLE_MAN;
DROP TABLE IF EXISTS MINI_ERP.REBATE_PROGRAM;
DROP TABLE IF EXISTS MINI_ERP.RES_CATEGORY;
DROP TABLE IF EXISTS MINI_ERP.RES_UNIT;
DROP TABLE IF EXISTS MINI_ERP.SALE_PREPARED;
DROP TABLE IF EXISTS MINI_ERP.SCRAP_STORE_OUT;
DROP TABLE IF EXISTS MINI_ERP.STORE_CHANGE;
DROP TABLE IF EXISTS MINI_ERP.STOCK_CHANGE;
DROP TABLE IF EXISTS MINI_ERP.STORE_AREA;
DROP TABLE IF EXISTS MINI_ERP.STORE;
DROP TABLE IF EXISTS MINI_ERP.SUPPLIER;
DROP TABLE IF EXISTS MINI_ERP.TRANS_CORP;
DROP TABLE IF EXISTS MINI_ERP.UNIT_GROUP;




/* Create Tables */

CREATE TABLE MINI_ERP.ACCOUNTING
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	PARENT VARCHAR(32) COMMENT 'PARENT',
	CURRENCY VARCHAR(32) NOT NULL COMMENT '币种',
	DIRECTION VARCHAR(10) NOT NULL COMMENT '方向',
	TYPE VARCHAR(32) NOT NULL COMMENT 'TYPE',
	LEVEL INT NOT NULL COMMENT 'LEVEL',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '总账科目' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ACCOUNT_CHECK_OUT
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	BEGINNING_BALANCE DECIMAL(19,4) NOT NULL COMMENT '期初余额',
	BEGINNING_COUNT DECIMAL(19,4) NOT NULL COMMENT '期初数量',
	CLOSING_BALANCE DECIMAL(19,4) NOT NULL COMMENT '期末余额',
	CLOSING_COUNT DECIMAL(19,4) NOT NULL COMMENT '期末数量',
	DEBIT_MONEY DECIMAL(19,4) NOT NULL COMMENT '借方金额',
	DEBIT_COUNT DECIMAL(19,4) NOT NULL COMMENT '借方数量',
	CREDIT_MONEY DECIMAL(19,4) NOT NULL COMMENT '贷方金额',
	CREDIT_COUNT DECIMAL(19,4) NOT NULL COMMENT '贷方数量',
	VERSION INT COMMENT 'VERSION',
	CHECKOUT BIGINT NOT NULL COMMENT 'CHECKOUT',
	ACCOUNT_CODE VARCHAR(50) NOT NULL COMMENT '科目代码',
	PRIMARY KEY (ID),
	CONSTRAINT UNIQUE_CUSTOMER_CHECKOUT UNIQUE (CHECKOUT, ACCOUNT_CODE)
) ENGINE = InnoDB COMMENT = '科目结帐' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ACCOUNT_OPER
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	OPER_EMP VARCHAR(32) NOT NULL COMMENT '操作人',
	ADVANCE_RECEIVABLE DECIMAL(19,3) NOT NULL COMMENT '预收账款',
	ACCOUNTS_RECEIVABLE DECIMAL(19,3) NOT NULL COMMENT '应收账款',
	PROXY_ACCOUNTS_RECEIVABLE DECIMAL(19,3) NOT NULL COMMENT '代收应收账款',
	OPER_TYPE VARCHAR(32) NOT NULL COMMENT '操作类型',
	OPER_DATE DATETIME NOT NULL COMMENT '操作日期',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	SAVEING VARCHAR(32) COMMENT 'SAVEING',
	CUSTOM VARCHAR(32) NOT NULL COMMENT 'CUSTOM',
	CUSTOMER_ORDER VARCHAR(32) COMMENT 'CUSTOMER_ORDER',
	ORDER_BACK VARCHAR(32) COMMENT 'ORDER_BACK',
	VERSION INT COMMENT 'VERSION',
	CERTIFICATE VARCHAR(32) COMMENT 'CERTIFICATE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '客户帐户操作记录' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ALLOCATION
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	APPLY_STORE VARCHAR(32) NOT NULL COMMENT '出库仓库',
	TARGET_STORE VARCHAR(32) NOT NULL COMMENT '入库仓库',
	APPLY_EMP VARCHAR(32) NOT NULL COMMENT '申请人',
	REASON VARCHAR(32) NOT NULL COMMENT '原因',
	MEMO VARCHAR(200) COMMENT '备注',
	STATE VARCHAR(20) NOT NULL COMMENT '状态',
	STORE_IN VARCHAR(32) COMMENT '入库',
	STORE_OUT VARCHAR(32) COMMENT '出库',
	CREATE_DATE DATETIME NOT NULL COMMENT '建立时间',
	TYPE VARCHAR(32) NOT NULL COMMENT '类型',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '调拨' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ALLOCATION_RES
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	COUNT DECIMAL(19,4) NOT NULL COMMENT '件数',
	STORE_RES VARCHAR(32) NOT NULL COMMENT 'STORE_RES',
	ALLOCATION VARCHAR(32) NOT NULL COMMENT 'ALLOCATION',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '申请调拨货品' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ASSEMBLY
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	REASON VARCHAR(32) NOT NULL COMMENT '原因',
	MEMO VARCHAR(200) COMMENT '备注',
	STORE_IN VARCHAR(32) NOT NULL COMMENT '出库',
	STORE_OUT VARCHAR(32) COMMENT '入库',
	ASSEMBLY_EMP VARCHAR(32) COMMENT '装配人',
	STATE VARCHAR(20) NOT NULL COMMENT '状态',
	CREATE_DATE DATETIME NOT NULL COMMENT '建立时间',
	COMPLETE_DATE DATETIME COMMENT '完成时间',
	LOSE_OUT VARCHAR(32) COMMENT '损耗出库',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '组装拆卸' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.BACK_DISPATCH
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	CUSTOMER_ORDER VARCHAR(32) NOT NULL COMMENT '客户退单',
	STOCK_CNAHGE VARCHAR(32) COMMENT 'STOCK_CNAHGE',
	STORE VARCHAR(32) NOT NULL COMMENT 'STORE',
	STORE_OUT BIT(1) NOT NULL COMMENT 'STORE_OUT',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '订单退货入库' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.BACK_ITEM
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	COUNT DECIMAL(19,4) NOT NULL COMMENT '件数',
	MONEY DECIMAL(19,3) COMMENT '单价',
	MEMO VARCHAR(200) COMMENT '备注',
	STORE_RES VARCHAR(32) NOT NULL COMMENT 'STORE_RES',
	MONEY_UNIT VARCHAR(32) NOT NULL COMMENT 'MONEY_UNIT',
	BACK_ORDER VARCHAR(32) NOT NULL COMMENT 'BACK_ORDER',
	DISPATCH VARCHAR(32) COMMENT 'DISPATCH',
	STATUS VARCHAR(10) NOT NULL COMMENT 'STATUS',
	TOTAL_MONEY DECIMAL(19,3) COMMENT 'TOTAL_MONEY',
	REBATE DECIMAL(19,4) NOT NULL COMMENT 'REBATE',
	SALE_COUNT DECIMAL(19,4) COMMENT 'SALE_COUNT',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = 'BACK_ITEM' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.BANK_ACCOUNT
(
	NUMBER VARCHAR(100) NOT NULL UNIQUE COMMENT '帐号',
	BANK VARCHAR(32) NOT NULL COMMENT 'BANK',
	ACCOUNT_OWNER VARCHAR(50) COMMENT '户名',
	OPEN_BANK VARCHAR(200) COMMENT '开户行',
	MEMO VARCHAR(200) COMMENT '备注',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '银行帐户' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.BATCH
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	PRO_DATE DATETIME COMMENT '生产日期',
	EXP_DATE DATETIME COMMENT '保质期至',
	SUPPLIER VARCHAR(32) COMMENT '供应商',
	PRODUCE BIT(1) NOT NULL COMMENT '是否生产批次',
	STORE_IN BIT(1) NOT NULL COMMENT '是否已入库',
	LAST_IN_TIME TIMESTAMP COMMENT '入库时间',
	DEFAULT_BATCH BIT(1) NOT NULL COMMENT '默认批次',
	MONEY DECIMAL(19,3) COMMENT '单价',
	STORE_RES VARCHAR(32) NOT NULL COMMENT 'STORE_RES',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '批次' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CARS
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	EMP_DRIVER VARCHAR(32) COMMENT 'EMP_DRIVER',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = 'CARS' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CERTIFICATE_ITEM
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	ACCOUNT_CODE VARCHAR(50) NOT NULL COMMENT '科目代码',
	DEBIT_MONEY DECIMAL(19,4) NOT NULL COMMENT '借方金额',
	CREDIT_MONEY DECIMAL(19,4) NOT NULL COMMENT '贷方金额',
	CERTIFICATE VARCHAR(32) NOT NULL COMMENT 'CERTIFICATE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = 'CERTIFICATE_ITEM' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CHECK_OUT
(
	C_YEAR INT NOT NULL COMMENT 'C_YEAR',
	C_MONTH INT NOT NULL COMMENT 'C_MONTH',
	CHECKOUT_TIME TIMESTAMP NOT NULL COMMENT 'CHECKOUT_TIME',
	OPER_EMP VARCHAR(32) NOT NULL COMMENT '操作人',
	BEGIN_DAY INT NOT NULL COMMENT '结算日',
	VERSION INT COMMENT 'VERSION',
	ID BIGINT NOT NULL COMMENT 'ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '结账' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CUSTOMER
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	-- 字典 代理商 施工方
	TYPE VARCHAR(32) NOT NULL COMMENT 'TYPE : 字典 代理商 施工方',
	MIDDLE_MAN VARCHAR(32) COMMENT 'MIDDLE_MAN',
	VERSION INT COMMENT 'VERSION',
	FAX VARCHAR(50) COMMENT '传真',
	MEMO VARCHAR(200) COMMENT '备注',
	MAIL VARCHAR(50) COMMENT 'MAIL',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	PROVINCE_CODE INT NOT NULL COMMENT '省市代码',
	LEVEL VARCHAR(32) NOT NULL COMMENT 'LEVEL',
	ADDRESS VARCHAR(200) COMMENT '地址',
	POST_CODE VARCHAR(10) COMMENT '邮编',
	CREATE_DATE DATETIME NOT NULL COMMENT '建立时间',
	CUSTOMER_AREA VARCHAR(20) NOT NULL COMMENT 'CUSTOMER_AREA',
	CITY VARCHAR(100) NOT NULL COMMENT 'CITY',
	ADVANCE_MONEY DECIMAL(19,3) NOT NULL COMMENT '预收款余额',
	ACCOUNT_MONEY DECIMAL(19,3) NOT NULL COMMENT '应收款余额',
	PROXY_ACCOUNT_MONEY DECIMAL(19,3) NOT NULL COMMENT '代收应收款余额',
	INIT_AC DECIMAL(19,4) COMMENT '初始应收账款',
	INIT_PAC DECIMAL(19,4) COMMENT '初始代收',
	INIT_AD DECIMAL(19,4) COMMENT 'INIT_AD',
	REBATE_PROGRAM VARCHAR(32) COMMENT 'REBATE_PROGRAM',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '客户' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CUSTOMER_AREA
(
	ID VARCHAR(20) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	AREA_ROLE VARCHAR(32) NOT NULL COMMENT '销售角色',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '客户区' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CUSTOMER_CONTACT
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	TYPE VARCHAR(32) NOT NULL COMMENT '类型',
	NAME VARCHAR(50) NOT NULL COMMENT '姓名',
	TEL VARCHAR(50) NOT NULL COMMENT '电话',
	MEMO VARCHAR(200) COMMENT '备注',
	CUSTOMER VARCHAR(32) NOT NULL COMMENT 'CUSTOMER',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '客户联系人' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CUSTOMER_LEVEL
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	PRIORITY INT NOT NULL COMMENT '优先级',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	MEMO VARCHAR(200) COMMENT '备注',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '客户等级' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CUSTOMER_ORDER
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	CONTACT VARCHAR(50) COMMENT '订货人',
	TEL VARCHAR(50) COMMENT '电话',
	CUSTOMER_ID VARCHAR(32) NOT NULL COMMENT 'CUSTOMER_ID',
	PAY_TYPE VARCHAR(32) NOT NULL COMMENT '交费方式',
	CREATE_DATE DATETIME NOT NULL COMMENT '建立时间',
	-- 和财务无关,只做管理使用
	PROFIT DECIMAL(19,3) COMMENT '利润 : 和财务无关,只做管理使用',
	TOTAL_COST DECIMAL(19,3) NOT NULL COMMENT '产品成本',
	MEMO VARCHAR(200) COMMENT '备注',
	VERSION INT COMMENT 'VERSION',
	INCLUDE_MIDDLE_MAN BIT(1) NOT NULL COMMENT '带入中间人',
	-- A  总金额 * 提点
	-- B  固定金额
	MIDDLE_CALC_TYPE VARCHAR(32) COMMENT '佣金计算方式 : A  总金额 * 提点
B  固定金额',
	MIDDLE_RATE DECIMAL(17,6) COMMENT '总提点',
	MIDDLE_TOTAL DECIMAL(19,3) COMMENT '中间人佣金',
	MIDDLE_MONEY DECIMAL(19,3) COMMENT '订单佣金',
	-- 中间人费用已支付
	MIDDLE_PAYED BIT(1) NOT NULL COMMENT '已支付 : 中间人费用已支付',
	ORDER_EMPLOYEE VARCHAR(32) NOT NULL COMMENT '签单人',
	TOTAL_REBATE DECIMAL(19,4) NOT NULL COMMENT '定单总折扣',
	-- 在订单完收款完成之前,此金额不准确,因出库时可能更改货品数量,金额会发生变化
	MONEY DECIMAL(19,3) NOT NULL COMMENT '应收金额 : 在订单完收款完成之前,此金额不准确,因出库时可能更改货品数量,金额会发生变化',
	EARNEST DECIMAL(19,3) COMMENT '订金',
	EARNEST_FIRST BIT(1) NOT NULL COMMENT '先付定金',
	RES_RECEIVED BIT(1) NOT NULL COMMENT '客户已收货',
	ALL_STORE_OUT BIT(1) NOT NULL COMMENT '订单出库',
	CANCELED BIT(1) NOT NULL COMMENT '已取消',
	RES_MONEY DECIMAL(19,3) NOT NULL COMMENT '货款',
	-- 现定为全部出库时间
	ALL_SHIP_DATE TIMESTAMP COMMENT '完成时间 : 现定为全部出库时间',
	ADVANCE_MONEY DECIMAL(19,3) NOT NULL COMMENT '预收金额',
	PAY_TAG BIT(1) NOT NULL COMMENT '收费标记',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '订单' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.DISPATCH
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NEED_RES VARCHAR(32) NOT NULL COMMENT 'NEED_RES',
	STORE VARCHAR(32) NOT NULL COMMENT 'STORE',
	STOCK_CHANGE VARCHAR(32) COMMENT 'STOCK_CHANGE',
	-- 快递或物流
	-- 整车发
	-- 送货上门
	-- 自提
	DELIVERY_TYPE VARCHAR(32) NOT NULL COMMENT '发货方式 : 快递或物流
整车发
送货上门
自提',
	SEND_TIME DATETIME COMMENT '发货时间',
	FARE DECIMAL(19,3) COMMENT '运费',
	SEND_EMP VARCHAR(32) COMMENT '发货人',
	OUT_CUSTOMER VARCHAR(50) COMMENT '客户自提提货人',
	MEMO VARCHAR(200) COMMENT '备注',
	TRANS_CORP VARCHAR(32) COMMENT 'TRANS_CORP',
	SEND_CAR_CODE VARCHAR(20) COMMENT '送货车辆',
	SEND_DRIVER VARCHAR(50) COMMENT '送货司机',
	SEND_TEL VARCHAR(50) COMMENT '送货电话',
	SEND_NUMBER VARCHAR(100) COMMENT '运单号',
	TODOOR_CAR VARCHAR(32) COMMENT 'TODOOR_CAR',
	STORE_OUT BIT(1) NOT NULL COMMENT '已出库',
	DELIVERED BIT(1) NOT NULL COMMENT '已发货',
	PRIMARY KEY (ID),
	CONSTRAINT NEED_AND_STORE UNIQUE (NEED_RES, STORE)
) ENGINE = InnoDB COMMENT = '调度' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.FACTORY
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	FACTORY_ROLE VARCHAR(32) NOT NULL COMMENT '工厂角色组',
	DEFAULT_STORE VARCHAR(32) COMMENT '生产默认仓库',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '工厂' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.FORMAT
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	DEFINE VARCHAR(32) NOT NULL COMMENT 'DEFINE',
	FORMAT_VALUE VARCHAR(500) NOT NULL COMMENT '规格值',
	STORE_RES VARCHAR(32) NOT NULL COMMENT 'STORE_RES',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '规格' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.FORMAT_DEFINE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	DATA_TYPE VARCHAR(32) NOT NULL COMMENT '数据类型 ',
	PRIORITY INT NOT NULL COMMENT '优先级',
	RES VARCHAR(32) NOT NULL COMMENT 'RES',
	WORD_CATEGORY_ID VARCHAR(32) COMMENT '字典类型ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '规格定义' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.INVENTORY
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	APPLY_DATE DATETIME NOT NULL COMMENT '申请日期',
	CHECK_DATE DATETIME COMMENT '盘点日期',
	-- 入库日期
	CHECKED_DATE DATETIME COMMENT '审核日期 : 入库日期',
	MEMO VARCHAR(200) COMMENT '备注',
	STORE VARCHAR(32) NOT NULL COMMENT 'STORE',
	TYPE VARCHAR(32) NOT NULL COMMENT '盘点类型',
	STOCK_CHANGED BIT(1) NOT NULL COMMENT '库存已改变',
	APPLY_EMP VARCHAR(32) NOT NULL COMMENT '负责人',
	CHECK_YEAR INT NOT NULL COMMENT 'CHECK_YEAR',
	CHECK_MONTH INT NOT NULL COMMENT 'CHECK_MONTH',
	CHECK_EMP VARCHAR(32) COMMENT '审核人',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '盘点' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.INVENTORY_ITEM
(
	INVENTORY VARCHAR(32) NOT NULL COMMENT 'INVENTORY',
	STOCK VARCHAR(32) NOT NULL COMMENT 'STOCK',
	BEFOR_COUNT DECIMAL(19,4) NOT NULL COMMENT '期初数量',
	LAST_COUNT DECIMAL(19,4) NOT NULL COMMENT '期末数量',
	CHANGE_ITEM VARCHAR(32) COMMENT '盘盈/盘亏项',
	-- 平/盘盈/盘亏
	CHANGE_TYPE VARCHAR(20) NOT NULL COMMENT '更改类型 : 平/盘盈/盘亏',
	CHANGE_COUNT DECIMAL(19,4) NOT NULL COMMENT 'CHANGE_COUNT',
	MEMO VARCHAR(200) COMMENT '备注',
	PRIMARY KEY (INVENTORY, STOCK)
) ENGINE = InnoDB COMMENT = 'INVENTORY_ITEM' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MATERIAL_BACK_STORE_IN
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	REASON VARCHAR(32) NOT NULL COMMENT '原因',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	STORE_CHANGE VARCHAR(32) NOT NULL COMMENT 'STORE_CHANGE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '退料入库' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MATERIAL_STORE_IN
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	STORE_CHANGE VARCHAR(32) NOT NULL COMMENT 'STORE_CHANGE',
	CHECK_EMP VARCHAR(32) COMMENT '检验员',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '收料入库' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MATERIAL_STORE_OUT
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	PRODUCT_BATCH VARCHAR(32) COMMENT '产品批次',
	RECEIVE_EMP VARCHAR(32) COMMENT '领料人',
	STORE_CHANGE VARCHAR(32) NOT NULL COMMENT 'STORE_CHANGE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '领料出库' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MIDDLE_MAN
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	CONTACT VARCHAR(50) NOT NULL COMMENT '联系人',
	TYPE VARCHAR(32) NOT NULL COMMENT '类型',
	MEMO VARCHAR(200) COMMENT '备注',
	BANK_NUMBER VARCHAR(50) COMMENT '银行帐号',
	TEL VARCHAR(50) COMMENT '电话',
	BANK_INFO VARCHAR(100) COMMENT '开户行',
	BANK VARCHAR(32) COMMENT '银行',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	REBATE_PROGRAM VARCHAR(32) COMMENT 'REBATE_PROGRAM',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '中间人' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MIDDLE_MONEY_PAY
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	MIDDLE_MAN VARCHAR(32) NOT NULL COMMENT 'MIDDLE_MAN',
	CUSTOMER_ORDER VARCHAR(32) NOT NULL COMMENT '订单',
	MONEY DECIMAL(19,3) NOT NULL COMMENT '金额',
	OPER_DATE TIMESTAMP NOT NULL COMMENT '支付时间',
	OPER_EMP VARCHAR(32) NOT NULL COMMENT '操作人',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	PAY_TYPE VARCHAR(32) NOT NULL COMMENT '支付方式',
	CHECK_NUMBER VARCHAR(50) COMMENT '支票号',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '中间人佣金支付记录' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MONEY_SAVE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	PAY_TYPE VARCHAR(32) NOT NULL COMMENT '支付方式',
	REMIT_FEE DECIMAL(19,3) NOT NULL COMMENT '汇款手续费',
	USE_CHECK BIT(1) NOT NULL COMMENT '支票',
	CHECK_NUMBER VARCHAR(50) COMMENT '支票号',
	PROXY VARCHAR(32) COMMENT 'PROXY',
	MONEY DECIMAL(19,3) NOT NULL COMMENT 'MONEY',
	VERSION INT COMMENT 'VERSION',
	CERTIFICATE VARCHAR(32) COMMENT 'CERTIFICATE',
	NUMBER VARCHAR(32) COMMENT 'NUMBER',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = 'MONEY_SAVE' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.NEED_RES
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	CUSTOMER_ORDER VARCHAR(32) NOT NULL COMMENT '订单',
	TYPE VARCHAR(32) NOT NULL COMMENT '类型',
	LIMIT_TIME TIMESTAMP COMMENT '限制时间',
	REASON VARCHAR(32) NOT NULL COMMENT '原因',
	MEMO VARCHAR(200) COMMENT '备注',
	CREATE_DATE DATETIME NOT NULL COMMENT '建立时间',
	FARE_BY_CUSTOMER BIT(1) NOT NULL COMMENT '客户承担运费',
	POST_CODE VARCHAR(10) COMMENT '邮编',
	ADDRESS VARCHAR(200) COMMENT '地址',
	RECEIVE_PERSON VARCHAR(50) NOT NULL COMMENT '收货人',
	RECEIVE_TEL VARCHAR(50) NOT NULL COMMENT '收货人电话',
	STATUS VARCHAR(32) NOT NULL COMMENT '状态',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '产品需求' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.NO_CONVERT_COUNT
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	RES_UNIT VARCHAR(32) NOT NULL COMMENT 'RES_UNIT',
	COUNT DECIMAL(19,4) NOT NULL COMMENT '件数',
	STOCK_CHANGE VARCHAR(32) COMMENT 'STOCK_CHANGE',
	STOCK VARCHAR(32) COMMENT 'STOCK',
	PREPARE_CHANGE VARCHAR(32) COMMENT 'PREPARE_CHANGE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '无转换率数量' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ORDER_BACK
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	REASON VARCHAR(32) NOT NULL COMMENT '原因',
	VERSION INT COMMENT 'VERSION',
	CREATE_DATE DATETIME NOT NULL COMMENT '建立时间',
	MEMO VARCHAR(200) COMMENT '备注',
	RES_COMPLETE BIT(1) NOT NULL COMMENT '已退货',
	APPLY_EMP VARCHAR(32) NOT NULL COMMENT '申请人',
	MONEY DECIMAL(19,3) NOT NULL COMMENT '金额',
	CUSTOMER VARCHAR(32) NOT NULL COMMENT 'CUSTOMER',
	DISPATCHED BIT(1) NOT NULL COMMENT 'DISPATCHED',
	MONEY_COMPLETE BIT(1) NOT NULL COMMENT 'MONEY_COMPLETE',
	COMPLETE_DATE TIMESTAMP COMMENT '退货确认时间',
	COFIRMED BIT(1) NOT NULL COMMENT 'COFIRMED',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '退单' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ORDER_FEE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	MONEY DECIMAL(19,3) NOT NULL COMMENT '金额',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	PAY BIT(1) NOT NULL COMMENT '已支付',
	CUSTOMER_ORDER VARCHAR(32) NOT NULL COMMENT '订单',
	PAY_TYPE VARCHAR(32) NOT NULL COMMENT '支付方式',
	CHECK_NUMBER VARCHAR(50) COMMENT '支票号',
	RECEIVE_NAME VARCHAR(50) NOT NULL COMMENT '收款人',
	BANK_NUMBER VARCHAR(50) COMMENT '银行帐号',
	BANK_INFO VARCHAR(100) COMMENT '开户行',
	MIDDLE_MONEY BIT(1) NOT NULL COMMENT '中间人费用',
	DEBIT VARCHAR(32) COMMENT '借方科目',
	CREDIT VARCHAR(32) COMMENT '贷方科目',
	RECEIVE_INFO VARCHAR(200) COMMENT '收款人信息',
	BANK VARCHAR(32) COMMENT '银行',
	PAY_DATE DATETIME COMMENT '支付时间',
	APPLY_DATE DATETIME NOT NULL COMMENT '申请时间',
	PAY_EMP VARCHAR(32) COMMENT '支付员工',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '订单费用' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ORDER_ITEM
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	STORE_RES VARCHAR(32) COMMENT 'STORE_RES',
	NEED_RES VARCHAR(32) NOT NULL COMMENT 'NEED_RES',
	COUNT DECIMAL(19,4) NOT NULL COMMENT '件数',
	MONEY DECIMAL(19,3) COMMENT '单价',
	MIDDLE_MONEY DECIMAL(19,3) COMMENT '订单佣金',
	MIDDLE_RATE DECIMAL(17,6) COMMENT '提点',
	-- A  总金额 * 提点
	-- B  固定金额
	MIDDLE_CALC_TYPE VARCHAR(32) COMMENT '佣金计算方式 : A  总金额 * 提点
B  固定金额',
	MIDDLE_UNIT VARCHAR(32) COMMENT 'MIDDLE_UNIT',
	MONEY_UNIT VARCHAR(32) NOT NULL COMMENT 'MONEY_UNIT',
	MEMO VARCHAR(200) COMMENT '备注',
	-- presentation
	PRESENTATION BIT(1) NOT NULL COMMENT '赠品 : presentation',
	DISPATCH VARCHAR(32) COMMENT 'DISPATCH',
	OVERLAY_OUT BIT(1) NOT NULL COMMENT 'OVERLAY_OUT',
	NEED_CONVERSION_RATE DECIMAL(19,10) NOT NULL COMMENT '订购转换率',
	TOTAL_MONEY DECIMAL(19,3) COMMENT 'TOTAL_MONEY',
	STATUS VARCHAR(10) NOT NULL COMMENT 'STATUS',
	REBATE DECIMAL(19,4) NOT NULL COMMENT 'REBATE',
	NEED_MONEY DECIMAL(19,3) COMMENT '订购尺寸金额',
	NEED_COUNT DECIMAL(19,4) COMMENT '订购数量',
	SALE_COUNT DECIMAL(19,4) NOT NULL COMMENT 'SALE_COUNT',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '订单项' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ORDER_ITEM_REBATE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	MODE VARCHAR(20) NOT NULL COMMENT 'MODE',
	PROGRAM VARCHAR(32) NOT NULL COMMENT 'PROGRAM',
	RES VARCHAR(32) NOT NULL COMMENT 'RES',
	CALC_UNIT VARCHAR(32) COMMENT '提成单位',
	REBATE DECIMAL(17,6) COMMENT '提点',
	PRIMARY KEY (ID),
	CONSTRAINT UNIQUE_PROGRAM_RES UNIQUE (PROGRAM, RES)
) ENGINE = InnoDB COMMENT = '订单项提成方式' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ORDER_REDUCE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	MONEY DECIMAL(19,4) NOT NULL COMMENT '金额',
	CUSTOMER_ORDER VARCHAR(32) NOT NULL COMMENT '订单',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = 'ORDER_REDUCE' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.OWE_OUT
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	STORE_RES VARCHAR(32) NOT NULL COMMENT 'STORE_RES',
	COUNT DECIMAL(19,4) NOT NULL COMMENT '件数',
	DISPATCH VARCHAR(32) NOT NULL COMMENT 'DISPATCH',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	IS_ADD BIT(1) NOT NULL COMMENT 'IS_ADD',
	NEED_CONVERSION_RATE DECIMAL(19,10) NOT NULL COMMENT '订购转换率',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '欠出库' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.PREPARE_STOCK_CHANGE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	COUNT DECIMAL(19,4) NOT NULL COMMENT '件数',
	STOCK_CHANGE VARCHAR(32) NOT NULL COMMENT 'STOCK_CHANGE',
	STORE_RES VARCHAR(32) NOT NULL COMMENT 'STORE_RES',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '未审核入库' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.PRICE_ITEM
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	QUOTED VARCHAR(32) NOT NULL COMMENT 'QUOTED',
	STORE_RES VARCHAR(32) NOT NULL COMMENT 'STORE_RES',
	COUNT DECIMAL(19,4) NOT NULL COMMENT 'COUNT',
	MEMO VARCHAR(200) COMMENT '备注',
	MONEY_UNIT VARCHAR(32) NOT NULL COMMENT 'MONEY_UNIT',
	MONEY DECIMAL(19,3) NOT NULL COMMENT '单价',
	PRIMARY KEY (ID),
	CONSTRAINT UNIQUE_STORERES_QUOTED UNIQUE (QUOTED, STORE_RES)
) ENGINE = InnoDB COMMENT = 'PRICE_ITEM' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.PRODUCT_GROUP
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	FACTORY VARCHAR(32) NOT NULL COMMENT 'FACTORY',
	PARENT VARCHAR(32) COMMENT 'PARENT',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '生产小组' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.PRODUCT_GROUP_RES
(
	PRODUCT_GROUP VARCHAR(32) NOT NULL COMMENT '生产组',
	RES VARCHAR(32) NOT NULL COMMENT 'RES',
	PRIMARY KEY (PRODUCT_GROUP, RES)
) ENGINE = InnoDB COMMENT = '生产物资' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.PRODUCT_STORE_IN
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	STORE_CHANGE VARCHAR(32) NOT NULL COMMENT 'STORE_CHANGE',
	PRODUCT_GROUP VARCHAR(32) NOT NULL COMMENT '生产小组',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '产品入库' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.QUOTED_PRICE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	CREATE_DATE TIMESTAMP NOT NULL COMMENT '报价日期',
	CREATE_EMP VARCHAR(32) NOT NULL COMMENT 'CREATE_EMP',
	CUSTOMER VARCHAR(32) NOT NULL COMMENT 'CUSTOMER',
	MEMO VARCHAR(200) COMMENT '备注',
	TYPE VARCHAR(32) NOT NULL COMMENT 'TYPE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = 'QUOTED_PRICE' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.REBATE_PROGRAM
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT 'NAME',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	ORDER_MODE VARCHAR(20) NOT NULL COMMENT '订单计算方式',
	REBATE DECIMAL(17,6) COMMENT '提点',
	CALC_ITEM BIT(1) NOT NULL COMMENT 'CALC_ITEM',
	ZERO_ITEM BIT(1) NOT NULL COMMENT 'ZERO_ITEM',
	PATCH_ITEM BIT(1) NOT NULL COMMENT 'PATCH_ITEM',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '返点方案' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.RES
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	CATEGORY VARCHAR(32) NOT NULL COMMENT 'CATEGORY',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	CODE VARCHAR(50) NOT NULL UNIQUE COMMENT '编号',
	MASTER_UNIT VARCHAR(32) NOT NULL COMMENT '主计量单位',
	IN_DEFAULT VARCHAR(32) NOT NULL COMMENT '入库默认计量单位',
	OUT_DEFAULT VARCHAR(32) NOT NULL COMMENT '出库默认计量单位',
	UNIT_GROUP VARCHAR(32) NOT NULL COMMENT 'UNIT_GROUP',
	ACCOUNTING VARCHAR(32) COMMENT 'ACCOUNTING',
	BATCH_MGR BIT(1) NOT NULL COMMENT '批次管理',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '物料' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.RES_CATEGORY
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	CATEGORY VARCHAR(32) COMMENT 'CATEGORY',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	_ROOT BIT(1) NOT NULL COMMENT '_ROOT',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	TYPE VARCHAR(32) NOT NULL COMMENT '货品类型',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '货品种类' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.RES_SALE_REBATE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	CUSTOMER_ORDER VARCHAR(32) NOT NULL COMMENT '订单',
	RES VARCHAR(32) NOT NULL COMMENT 'RES',
	RES_UNIT VARCHAR(32) NOT NULL COMMENT 'RES_UNIT',
	ITEM_REBATE DECIMAL(19,4) NOT NULL COMMENT 'ITEM_REBATE',
	COUNT DECIMAL(19,4) NOT NULL COMMENT 'COUNT',
	MONEY DECIMAL(19,3) NOT NULL COMMENT '金额',
	REBATE_BASIC_COUNT DECIMAL(19,4) NOT NULL COMMENT '反点基数',
	REBATE_RATE_COUNT DECIMAL(19,4) NOT NULL COMMENT '返点数',
	REBATE_COUNT DECIMAL(19,4) NOT NULL COMMENT '返点数量',
	REBATE_MONEY DECIMAL(19,4) NOT NULL COMMENT '返点金额',
	MEMO VARCHAR(200) COMMENT '备注',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '物质销售返点' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.RES_UNIT
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	CONVERSION_RATE DECIMAL(19,10) COMMENT '转换率',
	UNIT_GROUP VARCHAR(32) NOT NULL COMMENT 'UNIT_GROUP',
	PRIORITY INT NOT NULL COMMENT '优先级',
	COUNT_FORMAT VARCHAR(20) NOT NULL COMMENT '数据格式',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '计量单位' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SALER_PRICE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	RES_UNIT VARCHAR(32) NOT NULL COMMENT 'RES_UNIT',
	RES VARCHAR(32) NOT NULL COMMENT 'RES',
	PRICE DECIMAL(19,3) NOT NULL COMMENT 'PRICE',
	MIDDLE_MAN VARCHAR(32) NOT NULL COMMENT 'MIDDLE_MAN',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '销售员价格' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SALER_STORE_RES_PRICE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	RES_PRICE VARCHAR(32) NOT NULL COMMENT 'RES_PRICE',
	STORE_RES VARCHAR(32) NOT NULL COMMENT 'STORE_RES',
	RES_UNIT VARCHAR(32) NOT NULL COMMENT 'RES_UNIT',
	PRICE DECIMAL(19,3) NOT NULL COMMENT 'PRICE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '物资底价' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SALE_PREPARED
(
	_WORD VARCHAR(10) NOT NULL COMMENT '凭证字',
	_CODE INT NOT NULL COMMENT '凭证号',
	CERTIFICATE_DATE DATETIME NOT NULL COMMENT '凭证时间',
	PREPARED_EMP VARCHAR(32) NOT NULL COMMENT '记帐人',
	MONEY DECIMAL(19,4) NOT NULL COMMENT 'MONEY',
	APPROVED_EMP VARCHAR(32) COMMENT '核准',
	CHECKED_EMP VARCHAR(32) COMMENT '审核',
	CASHIER VARCHAR(32) COMMENT '出纳',
	MEMO VARCHAR(200) COMMENT '备注',
	VOUCHERS_COUNT INT COMMENT '附票数',
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '销售记帐' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SCRAP_STORE_OUT
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	REASON VARCHAR(32) NOT NULL COMMENT '原因',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	STORE_CHANGE VARCHAR(32) NOT NULL COMMENT 'STORE_CHANGE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '报损出库' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STOCK
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	RES VARCHAR(32) NOT NULL COMMENT 'RES',
	COUNT DECIMAL(19,4) NOT NULL COMMENT '件数',
	VERSION INT COMMENT 'VERSION',
	STORE VARCHAR(32) NOT NULL COMMENT 'STORE',
	PRIMARY KEY (ID),
	CONSTRAINT STOCE_STORE_RES_UNIQUE UNIQUE (RES, STORE)
) ENGINE = InnoDB COMMENT = '库存' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STOCK_CHANGE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	STORE VARCHAR(32) NOT NULL COMMENT 'STORE',
	OPER_DATE DATETIME NOT NULL COMMENT '操作日期',
	OPER_EMP VARCHAR(32) NOT NULL COMMENT '操作人',
	OPER_TYPE VARCHAR(32) NOT NULL COMMENT '操作类型',
	MEMO VARCHAR(200) COMMENT '备注',
	VERIFY BIT(1) NOT NULL COMMENT 'VERIFY',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '出入库' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STOCK_CHANGE_ITEM
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	COUNT DECIMAL(19,4) NOT NULL COMMENT '件数',
	STORE_CHANGE VARCHAR(32) NOT NULL COMMENT 'STORE_CHANGE',
	STORE_RES VARCHAR(32) NOT NULL COMMENT 'STORE_RES',
	-- INVENTORY
	STOCK VARCHAR(32) NOT NULL COMMENT '库存 : INVENTORY',
	MEMO VARCHAR(200) COMMENT '备注',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '入库出库项目' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STORE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	ADDRESS VARCHAR(200) COMMENT '地址',
	TEL VARCHAR(50) COMMENT '电话',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	VERSION INT COMMENT 'VERSION',
	OPEN BIT(1) NOT NULL COMMENT 'OPEN',
	ROLE_ID VARCHAR(32) NOT NULL COMMENT 'ROLE_ID',
	SHIP_ROLE VARCHAR(32) NOT NULL COMMENT '发货角色',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '仓库' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STORE_AREA
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	STORE VARCHAR(32) NOT NULL COMMENT 'STORE',
	PARENT VARCHAR(32) COMMENT 'PARENT',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	DESCRIPTION VARCHAR(200) COMMENT '描述',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '库位' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STORE_CHANGE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	TYPE VARCHAR(32) NOT NULL COMMENT '类型',
	MEMO VARCHAR(200) COMMENT '备注',
	STORE_CHANGE VARCHAR(32) COMMENT 'STORE_CHANGE',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '库存变动' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STORE_RES
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	RES VARCHAR(32) NOT NULL COMMENT 'RES',
	CODE VARCHAR(50) NOT NULL UNIQUE COMMENT '编号',
	STORE_WARN DECIMAL(19,4) COMMENT '库存预警',
	EXP_WARN INT COMMENT '过期预警',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	FLOAT_CONVERSION_RATE DECIMAL(19,10) COMMENT '浮动转换率',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '货品' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STORE_RES_REBATE
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	MODE VARCHAR(20) NOT NULL COMMENT 'MODE',
	STORE_RES VARCHAR(32) NOT NULL COMMENT 'STORE_RES',
	REBATE DECIMAL(17,6) COMMENT '提点',
	CALC_UNIT VARCHAR(32) COMMENT 'CALC_UNIT',
	ORDER_ITEM_REBATE VARCHAR(32) COMMENT '订单项',
	PRIMARY KEY (ID),
	CONSTRAINT UNIQUE_RES_ORDER_REBATE_ITEM UNIQUE (STORE_RES, ORDER_ITEM_REBATE)
) ENGINE = InnoDB COMMENT = '特殊货品提成方式' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SUPPLIER
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '供应商' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SUPPLIER_RES
(
	SUPPLIER VARCHAR(32) NOT NULL COMMENT 'SUPPLIER',
	RES VARCHAR(32) NOT NULL COMMENT 'RES',
	PRIMARY KEY (SUPPLIER, RES)
) ENGINE = InnoDB COMMENT = 'SUPPLIER_RES' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.TRANS_CORP
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	TEL VARCHAR(50) COMMENT '电话',
	CONTACT VARCHAR(50) COMMENT '联系人',
	ENABLE BIT(1) NOT NULL COMMENT 'ENABLE',
	MEMO VARCHAR(200) COMMENT '备注',
	TYPE VARCHAR(32) NOT NULL COMMENT '类型',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '物流' DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.UNIT_GROUP
(
	ID VARCHAR(32) NOT NULL COMMENT 'ID',
	NAME VARCHAR(50) NOT NULL COMMENT '名称',
	TYPE VARCHAR(32) NOT NULL COMMENT 'TYPE',
	FLOAT_CONVERT_FORMAT VARCHAR(20) COMMENT '浮动转换率格式',
	PRIMARY KEY (ID)
) ENGINE = InnoDB COMMENT = '计量单位组' DEFAULT CHARACTER SET utf8;



/* Create Foreign Keys */

ALTER TABLE MINI_ERP.ACCOUNTING
	ADD FOREIGN KEY (PARENT)
	REFERENCES MINI_ERP.ACCOUNTING (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_FEE
	ADD FOREIGN KEY (DEBIT)
	REFERENCES MINI_ERP.ACCOUNTING (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (ACCOUNTING)
	REFERENCES MINI_ERP.ACCOUNTING (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_FEE
	ADD FOREIGN KEY (CREDIT)
	REFERENCES MINI_ERP.ACCOUNTING (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ALLOCATION_RES
	ADD FOREIGN KEY (ALLOCATION)
	REFERENCES MINI_ERP.ALLOCATION (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_ITEM
	ADD FOREIGN KEY (DISPATCH)
	REFERENCES MINI_ERP.BACK_DISPATCH (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MONEY_SAVE
	ADD FOREIGN KEY (NUMBER)
	REFERENCES MINI_ERP.BANK_ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MATERIAL_STORE_OUT
	ADD FOREIGN KEY (PRODUCT_BATCH)
	REFERENCES MINI_ERP.BATCH (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.DISPATCH
	ADD FOREIGN KEY (TODOOR_CAR)
	REFERENCES MINI_ERP.CARS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_CHECK_OUT
	ADD FOREIGN KEY (CHECKOUT)
	REFERENCES MINI_ERP.CHECK_OUT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER_ORDER
	ADD FOREIGN KEY (CUSTOMER_ID)
	REFERENCES MINI_ERP.CUSTOMER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER_CONTACT
	ADD FOREIGN KEY (CUSTOMER)
	REFERENCES MINI_ERP.CUSTOMER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_OPER
	ADD FOREIGN KEY (CUSTOM)
	REFERENCES MINI_ERP.CUSTOMER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_BACK
	ADD FOREIGN KEY (CUSTOMER)
	REFERENCES MINI_ERP.CUSTOMER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.QUOTED_PRICE
	ADD FOREIGN KEY (CUSTOMER)
	REFERENCES MINI_ERP.CUSTOMER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER
	ADD FOREIGN KEY (CUSTOMER_AREA)
	REFERENCES MINI_ERP.CUSTOMER_AREA (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER
	ADD FOREIGN KEY (LEVEL)
	REFERENCES MINI_ERP.CUSTOMER_LEVEL (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_OPER
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.NEED_RES
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES_SALE_REBATE
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MIDDLE_MONEY_PAY
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_FEE
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_REDUCE
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.OWE_OUT
	ADD FOREIGN KEY (DISPATCH)
	REFERENCES MINI_ERP.DISPATCH (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM
	ADD FOREIGN KEY (DISPATCH)
	REFERENCES MINI_ERP.DISPATCH (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_GROUP
	ADD FOREIGN KEY (FACTORY)
	REFERENCES MINI_ERP.FACTORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.FORMAT
	ADD FOREIGN KEY (DEFINE)
	REFERENCES MINI_ERP.FORMAT_DEFINE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.INVENTORY_ITEM
	ADD FOREIGN KEY (INVENTORY)
	REFERENCES MINI_ERP.INVENTORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_PRICE
	ADD FOREIGN KEY (MIDDLE_MAN)
	REFERENCES MINI_ERP.MIDDLE_MAN (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER
	ADD FOREIGN KEY (MIDDLE_MAN)
	REFERENCES MINI_ERP.MIDDLE_MAN (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MIDDLE_MONEY_PAY
	ADD FOREIGN KEY (MIDDLE_MAN)
	REFERENCES MINI_ERP.MIDDLE_MAN (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_OPER
	ADD FOREIGN KEY (SAVEING)
	REFERENCES MINI_ERP.MONEY_SAVE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM
	ADD FOREIGN KEY (NEED_RES)
	REFERENCES MINI_ERP.NEED_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.DISPATCH
	ADD FOREIGN KEY (NEED_RES)
	REFERENCES MINI_ERP.NEED_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_OPER
	ADD FOREIGN KEY (ORDER_BACK)
	REFERENCES MINI_ERP.ORDER_BACK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_ITEM
	ADD FOREIGN KEY (BACK_ORDER)
	REFERENCES MINI_ERP.ORDER_BACK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_DISPATCH
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.ORDER_BACK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_RES_REBATE
	ADD FOREIGN KEY (ORDER_ITEM_REBATE)
	REFERENCES MINI_ERP.ORDER_ITEM_REBATE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.NO_CONVERT_COUNT
	ADD FOREIGN KEY (PREPARE_CHANGE)
	REFERENCES MINI_ERP.PREPARE_STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_GROUP_RES
	ADD FOREIGN KEY (PRODUCT_GROUP)
	REFERENCES MINI_ERP.PRODUCT_GROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_GROUP
	ADD FOREIGN KEY (PARENT)
	REFERENCES MINI_ERP.PRODUCT_GROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_STORE_IN
	ADD FOREIGN KEY (PRODUCT_GROUP)
	REFERENCES MINI_ERP.PRODUCT_GROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRICE_ITEM
	ADD FOREIGN KEY (QUOTED)
	REFERENCES MINI_ERP.QUOTED_PRICE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER
	ADD FOREIGN KEY (REBATE_PROGRAM)
	REFERENCES MINI_ERP.REBATE_PROGRAM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM_REBATE
	ADD FOREIGN KEY (PROGRAM)
	REFERENCES MINI_ERP.REBATE_PROGRAM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MIDDLE_MAN
	ADD FOREIGN KEY (REBATE_PROGRAM)
	REFERENCES MINI_ERP.REBATE_PROGRAM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SUPPLIER_RES
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.FORMAT_DEFINE
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES_SALE_REBATE
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM_REBATE
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_GROUP_RES
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_PRICE
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_RES
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES_CATEGORY
	ADD FOREIGN KEY (CATEGORY)
	REFERENCES MINI_ERP.RES_CATEGORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (CATEGORY)
	REFERENCES MINI_ERP.RES_CATEGORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (IN_DEFAULT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_PRICE
	ADD FOREIGN KEY (RES_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM
	ADD FOREIGN KEY (MIDDLE_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRICE_ITEM
	ADD FOREIGN KEY (MONEY_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (OUT_DEFAULT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_STORE_RES_PRICE
	ADD FOREIGN KEY (RES_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.NO_CONVERT_COUNT
	ADD FOREIGN KEY (RES_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM_REBATE
	ADD FOREIGN KEY (CALC_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (MASTER_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM
	ADD FOREIGN KEY (MONEY_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_RES_REBATE
	ADD FOREIGN KEY (CALC_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES_SALE_REBATE
	ADD FOREIGN KEY (RES_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_ITEM
	ADD FOREIGN KEY (MONEY_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_STORE_RES_PRICE
	ADD FOREIGN KEY (RES_PRICE)
	REFERENCES MINI_ERP.SALER_PRICE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MONEY_SAVE
	ADD FOREIGN KEY (CERTIFICATE)
	REFERENCES MINI_ERP.SALE_PREPARED (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_OPER
	ADD FOREIGN KEY (CERTIFICATE)
	REFERENCES MINI_ERP.SALE_PREPARED (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CERTIFICATE_ITEM
	ADD FOREIGN KEY (CERTIFICATE)
	REFERENCES MINI_ERP.SALE_PREPARED (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE_ITEM
	ADD FOREIGN KEY (STOCK)
	REFERENCES MINI_ERP.STOCK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.NO_CONVERT_COUNT
	ADD FOREIGN KEY (STOCK)
	REFERENCES MINI_ERP.STOCK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.INVENTORY_ITEM
	ADD FOREIGN KEY (STOCK)
	REFERENCES MINI_ERP.STOCK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.DISPATCH
	ADD FOREIGN KEY (STOCK_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE_ITEM
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_CHANGE
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PREPARE_STOCK_CHANGE
	ADD FOREIGN KEY (STOCK_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SCRAP_STORE_OUT
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ALLOCATION
	ADD FOREIGN KEY (STORE_IN)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MATERIAL_STORE_IN
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_STORE_IN
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ASSEMBLY
	ADD FOREIGN KEY (STORE_OUT)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MATERIAL_BACK_STORE_IN
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MATERIAL_STORE_OUT
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ALLOCATION
	ADD FOREIGN KEY (STORE_OUT)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_DISPATCH
	ADD FOREIGN KEY (STOCK_CNAHGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ASSEMBLY
	ADD FOREIGN KEY (LOSE_OUT)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ASSEMBLY
	ADD FOREIGN KEY (STORE_IN)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.NO_CONVERT_COUNT
	ADD FOREIGN KEY (STOCK_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE_ITEM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.INVENTORY_ITEM
	ADD FOREIGN KEY (CHANGE_ITEM)
	REFERENCES MINI_ERP.STOCK_CHANGE_ITEM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ALLOCATION
	ADD FOREIGN KEY (TARGET_STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.DISPATCH
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_AREA
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ALLOCATION
	ADD FOREIGN KEY (APPLY_STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.FACTORY
	ADD FOREIGN KEY (DEFAULT_STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.INVENTORY
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_DISPATCH
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_AREA
	ADD FOREIGN KEY (PARENT)
	REFERENCES MINI_ERP.STORE_AREA (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_STORE_RES_PRICE
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.OWE_OUT
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE_ITEM
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRICE_ITEM
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PREPARE_STOCK_CHANGE
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.FORMAT
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BATCH
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ALLOCATION_RES
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_RES_REBATE
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_ITEM
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BATCH
	ADD FOREIGN KEY (SUPPLIER)
	REFERENCES MINI_ERP.SUPPLIER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SUPPLIER_RES
	ADD FOREIGN KEY (SUPPLIER)
	REFERENCES MINI_ERP.SUPPLIER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.DISPATCH
	ADD FOREIGN KEY (TRANS_CORP)
	REFERENCES MINI_ERP.TRANS_CORP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MONEY_SAVE
	ADD FOREIGN KEY (PROXY)
	REFERENCES MINI_ERP.TRANS_CORP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (UNIT_GROUP)
	REFERENCES MINI_ERP.UNIT_GROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES_UNIT
	ADD FOREIGN KEY (UNIT_GROUP)
	REFERENCES MINI_ERP.UNIT_GROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



