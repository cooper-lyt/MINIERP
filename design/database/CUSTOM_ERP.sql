SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS MINI_ERP.ORDER_FEE;
DROP TABLE IF EXISTS MINI_ERP.FORMAT;
DROP TABLE IF EXISTS MINI_ERP.FORMAT_DEFINE;
DROP TABLE IF EXISTS MINI_ERP.SALER_STORE_RES_PRICE;
DROP TABLE IF EXISTS MINI_ERP.SALER_PRICE;
DROP TABLE IF EXISTS MINI_ERP.RES_SALE_REBATE;
DROP TABLE IF EXISTS MINI_ERP.SUPPLIER_RES;
DROP TABLE IF EXISTS MINI_ERP.PRODUCT_GROUP_RES;
DROP TABLE IF EXISTS MINI_ERP.STORE_RES_REBATE;
DROP TABLE IF EXISTS MINI_ERP.ORDER_ITEM_REBATE;
DROP TABLE IF EXISTS MINI_ERP.BOM;
DROP TABLE IF EXISTS MINI_ERP.ALLOCATION_RES;
DROP TABLE IF EXISTS MINI_ERP.OWE_OUT;
DROP TABLE IF EXISTS MINI_ERP.ORDER_ITEM;
DROP TABLE IF EXISTS MINI_ERP.BACK_ITEM;
DROP TABLE IF EXISTS MINI_ERP.MATERIAL_STORE_OUT;
DROP TABLE IF EXISTS MINI_ERP.BATCH;
DROP TABLE IF EXISTS MINI_ERP.NO_CONVERT_COUNT;
DROP TABLE IF EXISTS MINI_ERP.PREPARE_STOCK_CHANGE;
DROP TABLE IF EXISTS MINI_ERP.INVENTORY_ITEM;
DROP TABLE IF EXISTS MINI_ERP.STOCK_CHANGE_ITEM;
DROP TABLE IF EXISTS MINI_ERP.STOCK;
DROP TABLE IF EXISTS MINI_ERP.PRICE_ITEM;
DROP TABLE IF EXISTS MINI_ERP.STORE_RES;
DROP TABLE IF EXISTS MINI_ERP.RES;
DROP TABLE IF EXISTS MINI_ERP.ACCOUNTING;
DROP TABLE IF EXISTS MINI_ERP.ACCOUNT_CHECK_OUT;
DROP TABLE IF EXISTS MINI_ERP.ACCOUNT_OPER;
DROP TABLE IF EXISTS MINI_ERP.STORE_CHANGE;
DROP TABLE IF EXISTS MINI_ERP.SCRAP_STORE_OUT;
DROP TABLE IF EXISTS MINI_ERP.MATERIAL_STORE_IN;
DROP TABLE IF EXISTS MINI_ERP.PRODUCT_STORE_IN;
DROP TABLE IF EXISTS MINI_ERP.DISPATCH;
DROP TABLE IF EXISTS MINI_ERP.BACK_DISPATCH;
DROP TABLE IF EXISTS MINI_ERP.MATERIAL_BACK_STORE_IN;
DROP TABLE IF EXISTS MINI_ERP.OUT_NUMBER;
DROP TABLE IF EXISTS MINI_ERP.STOCK_CHANGE;
DROP TABLE IF EXISTS MINI_ERP.ALLOCATION;
DROP TABLE IF EXISTS MINI_ERP.ASSEMBLY;
DROP TABLE IF EXISTS MINI_ERP.MONEY_SAVE;
DROP TABLE IF EXISTS MINI_ERP.BANK_ACCOUNT;
DROP TABLE IF EXISTS MINI_ERP.CARS;
DROP TABLE IF EXISTS MINI_ERP.CERTIFICATE_ITEM;
DROP TABLE IF EXISTS MINI_ERP.CHECK_OUT;
DROP TABLE IF EXISTS MINI_ERP.ORDER_REDUCE;
DROP TABLE IF EXISTS MINI_ERP.MIDDLE_MONEY_PAY;
DROP TABLE IF EXISTS MINI_ERP.NEED_RES;
DROP TABLE IF EXISTS MINI_ERP.CUSTOMER_ORDER;
DROP TABLE IF EXISTS MINI_ERP.CUSTOMER_CONTACT;
DROP TABLE IF EXISTS MINI_ERP.QUOTED_PRICE;
DROP TABLE IF EXISTS MINI_ERP.ORDER_BACK;
DROP TABLE IF EXISTS MINI_ERP.CUSTOMER;
DROP TABLE IF EXISTS MINI_ERP.CUSTOMER_AREA;
DROP TABLE IF EXISTS MINI_ERP.CUSTOMER_LEVEL;
DROP TABLE IF EXISTS MINI_ERP.PRODUCT_GROUP;
DROP TABLE IF EXISTS MINI_ERP.FACTORY;
DROP TABLE IF EXISTS MINI_ERP.INVENTORY;
DROP TABLE IF EXISTS MINI_ERP.MIDDLE_MAN;
DROP TABLE IF EXISTS MINI_ERP.REBATE_PROGRAM;
DROP TABLE IF EXISTS MINI_ERP.RES_CATEGORY;
DROP TABLE IF EXISTS MINI_ERP.RES_UNIT;
DROP TABLE IF EXISTS MINI_ERP.SALE_PREPARED;
DROP TABLE IF EXISTS MINI_ERP.STORE_AREA;
DROP TABLE IF EXISTS MINI_ERP.STORE;
DROP TABLE IF EXISTS MINI_ERP.SUPPLIER;
DROP TABLE IF EXISTS MINI_ERP.TRANS_CORP;
DROP TABLE IF EXISTS MINI_ERP.UNIT_GROUP;




/* Create Tables */

CREATE TABLE MINI_ERP.ACCOUNTING
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	PARENT VARCHAR(32),
	CURRENCY VARCHAR(32) NOT NULL,
	DIRECTION VARCHAR(10) NOT NULL,
	TYPE VARCHAR(32) NOT NULL,
	LEVEL INT NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ACCOUNT_CHECK_OUT
(
	ID VARCHAR(32) NOT NULL,
	BEGINNING_BALANCE DECIMAL(19,4) NOT NULL,
	BEGINNING_COUNT DECIMAL(19,4) NOT NULL,
	CLOSING_BALANCE DECIMAL(19,4) NOT NULL,
	CLOSING_COUNT DECIMAL(19,4) NOT NULL,
	DEBIT_MONEY DECIMAL(19,4) NOT NULL,
	DEBIT_COUNT DECIMAL(19,4) NOT NULL,
	CREDIT_MONEY DECIMAL(19,4) NOT NULL,
	CREDIT_COUNT DECIMAL(19,4) NOT NULL,
	VERSION INT,
	CHECKOUT BIGINT NOT NULL,
	ACCOUNT_CODE VARCHAR(50) NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT UNIQUE_CUSTOMER_CHECKOUT UNIQUE (CHECKOUT, ACCOUNT_CODE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ACCOUNT_OPER
(
	ID VARCHAR(32) NOT NULL,
	OPER_EMP VARCHAR(32) NOT NULL,
	ADVANCE_RECEIVABLE DECIMAL(19,3) NOT NULL,
	ACCOUNTS_RECEIVABLE DECIMAL(19,3) NOT NULL,
	PROXY_ACCOUNTS_RECEIVABLE DECIMAL(19,3) NOT NULL,
	OPER_TYPE VARCHAR(32) NOT NULL,
	OPER_DATE DATETIME NOT NULL,
	DESCRIPTION VARCHAR(200),
	SAVEING VARCHAR(32),
	CUSTOM VARCHAR(32) NOT NULL,
	CUSTOMER_ORDER VARCHAR(32),
	ORDER_BACK VARCHAR(32),
	VERSION INT,
	CERTIFICATE VARCHAR(32),
	CREATE_DATE TIMESTAMP,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ALLOCATION
(
	ID VARCHAR(32) NOT NULL,
	APPLY_STORE VARCHAR(32) NOT NULL,
	TARGET_STORE VARCHAR(32) NOT NULL,
	APPLY_EMP VARCHAR(32) NOT NULL,
	REASON VARCHAR(32) NOT NULL,
	MEMO VARCHAR(200),
	STATE VARCHAR(20) NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	TYPE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ALLOCATION_RES
(
	ID VARCHAR(32) NOT NULL,
	COUNT DECIMAL(19,4) NOT NULL,
	STORE_RES VARCHAR(32) NOT NULL,
	ALLOCATION VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ASSEMBLY
(
	ID VARCHAR(32) NOT NULL,
	REASON VARCHAR(32) NOT NULL,
	MEMO VARCHAR(200),
	ASSEMBLY_EMP VARCHAR(32),
	STATE VARCHAR(20) NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	COMPLETE_DATE DATETIME,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.BACK_DISPATCH
(
	ID VARCHAR(32) NOT NULL,
	CUSTOMER_ORDER VARCHAR(32) NOT NULL,
	STOCK_CNAHGE VARCHAR(32),
	STORE VARCHAR(32) NOT NULL,
	STORE_OUT BIT(1) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.BACK_ITEM
(
	ID VARCHAR(32) NOT NULL,
	COUNT DECIMAL(19,4) NOT NULL,
	MONEY DECIMAL(19,3),
	MEMO VARCHAR(200),
	STORE_RES VARCHAR(32) NOT NULL,
	MONEY_UNIT VARCHAR(32) NOT NULL,
	BACK_ORDER VARCHAR(32) NOT NULL,
	DISPATCH VARCHAR(32),
	STATUS VARCHAR(10) NOT NULL,
	TOTAL_MONEY DECIMAL(19,3),
	REBATE DECIMAL(19,4) NOT NULL,
	SALE_COUNT DECIMAL(19,4),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.BANK_ACCOUNT
(
	NUMBER VARCHAR(100) NOT NULL,
	BANK VARCHAR(32) NOT NULL,
	ACCOUNT_OWNER VARCHAR(50),
	OPEN_BANK VARCHAR(200),
	MEMO VARCHAR(200),
	ENABLE BIT(1) NOT NULL,
	ID VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE (NUMBER)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.BATCH
(
	ID VARCHAR(32) NOT NULL,
	PRO_DATE DATETIME,
	EXP_DATE DATETIME,
	SUPPLIER VARCHAR(32),
	PRODUCE BIT(1) NOT NULL,
	STORE_IN BIT(1) NOT NULL,
	LAST_IN_TIME TIMESTAMP,
	DEFAULT_BATCH BIT(1) NOT NULL,
	MONEY DECIMAL(19,3),
	STORE_RES VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.BOM
(
	SOURCE VARCHAR(32) NOT NULL,
	TARGET VARCHAR(32) NOT NULL,
	MASTER_COUNT DECIMAL(20,6) NOT NULL,
	PRIMARY KEY (SOURCE, TARGET)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CARS
(
	ID VARCHAR(32) NOT NULL,
	EMP_DRIVER VARCHAR(32),
	ENABLE BIT(1) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CERTIFICATE_ITEM
(
	ID VARCHAR(32) NOT NULL,
	DESCRIPTION VARCHAR(200),
	ACCOUNT_CODE VARCHAR(50) NOT NULL,
	DEBIT_MONEY DECIMAL(19,4) NOT NULL,
	CREDIT_MONEY DECIMAL(19,4) NOT NULL,
	CERTIFICATE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CHECK_OUT
(
	C_YEAR INT NOT NULL,
	C_MONTH INT NOT NULL,
	CHECKOUT_TIME TIMESTAMP NOT NULL,
	OPER_EMP VARCHAR(32) NOT NULL,
	BEGIN_DAY INT NOT NULL,
	VERSION INT,
	ID BIGINT NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CUSTOMER
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	-- 字典 代理商 施工方
	TYPE VARCHAR(32) NOT NULL COMMENT '字典 代理商 施工方',
	MIDDLE_MAN VARCHAR(32),
	VERSION INT,
	FAX VARCHAR(50),
	MEMO VARCHAR(200),
	MAIL VARCHAR(50),
	ENABLE BIT(1) NOT NULL,
	PROVINCE_CODE INT NOT NULL,
	LEVEL VARCHAR(32) NOT NULL,
	ADDRESS VARCHAR(200),
	POST_CODE VARCHAR(10),
	CREATE_DATE DATETIME NOT NULL,
	CUSTOMER_AREA VARCHAR(20) NOT NULL,
	CITY VARCHAR(100) NOT NULL,
	ADVANCE_MONEY DECIMAL(19,3) NOT NULL,
	ACCOUNT_MONEY DECIMAL(19,3) NOT NULL,
	PROXY_ACCOUNT_MONEY DECIMAL(19,3) NOT NULL,
	INIT_AC DECIMAL(19,4),
	INIT_PAC DECIMAL(19,4),
	INIT_AD DECIMAL(19,4),
	REBATE_PROGRAM VARCHAR(32),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CUSTOMER_AREA
(
	ID VARCHAR(20) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	AREA_ROLE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CUSTOMER_CONTACT
(
	ID VARCHAR(32) NOT NULL,
	TYPE VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	TEL VARCHAR(50) NOT NULL,
	MEMO VARCHAR(200),
	CUSTOMER VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CUSTOMER_LEVEL
(
	ID VARCHAR(32) NOT NULL,
	PRIORITY INT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	MEMO VARCHAR(200),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.CUSTOMER_ORDER
(
	ID VARCHAR(32) NOT NULL,
	CONTACT VARCHAR(50),
	TEL VARCHAR(50),
	CUSTOMER_ID VARCHAR(32) NOT NULL,
	PAY_TYPE VARCHAR(32) NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	-- 和财务无关,只做管理使用
	PROFIT DECIMAL(19,3) COMMENT '和财务无关,只做管理使用',
	TOTAL_COST DECIMAL(19,3) NOT NULL,
	MEMO VARCHAR(200),
	VERSION INT,
	-- A  总金额 * 提点
	-- B  固定金额
	MIDDLE_CALC_TYPE VARCHAR(32) COMMENT 'A  总金额 * 提点
B  固定金额',
	MIDDLE_RATE DECIMAL(17,6),
	MIDDLE_TOTAL DECIMAL(19,3),
	MIDDLE_MONEY DECIMAL(19,3),
	-- 中间人费用已支付
	MIDDLE_PAYED BIT(1) NOT NULL COMMENT '中间人费用已支付',
	ORDER_EMPLOYEE VARCHAR(32) NOT NULL,
	TOTAL_REBATE DECIMAL(19,4) NOT NULL,
	-- 在订单完收款完成之前,此金额不准确,因出库时可能更改货品数量,金额会发生变化
	MONEY DECIMAL(19,3) NOT NULL COMMENT '在订单完收款完成之前,此金额不准确,因出库时可能更改货品数量,金额会发生变化',
	EARNEST DECIMAL(19,3),
	EARNEST_FIRST BIT(1) NOT NULL,
	RES_RECEIVED BIT(1) NOT NULL,
	ALL_STORE_OUT BIT(1) NOT NULL,
	CANCELED BIT(1) NOT NULL,
	RES_MONEY DECIMAL(19,3) NOT NULL,
	-- 现定为全部出库时间
	ALL_SHIP_DATE TIMESTAMP COMMENT '现定为全部出库时间',
	ADVANCE_MONEY DECIMAL(19,3) NOT NULL,
	PAY_TAG BIT(1) NOT NULL,
	ACCOUNT_CHANGE BIT(1) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.DISPATCH
(
	ID VARCHAR(32) NOT NULL,
	NEED_RES VARCHAR(32) NOT NULL,
	STORE VARCHAR(32) NOT NULL,
	STOCK_CHANGE VARCHAR(32),
	-- 快递或物流
	-- 整车发
	-- 送货上门
	-- 自提
	DELIVERY_TYPE VARCHAR(32) NOT NULL COMMENT '快递或物流
整车发
送货上门
自提',
	SEND_TIME DATETIME,
	FARE DECIMAL(19,3),
	SEND_EMP VARCHAR(32),
	OUT_CUSTOMER VARCHAR(50),
	MEMO VARCHAR(200),
	TRANS_CORP VARCHAR(32),
	SEND_CAR_CODE VARCHAR(20),
	SEND_DRIVER VARCHAR(50),
	SEND_TEL VARCHAR(50),
	SEND_NUMBER VARCHAR(100),
	TODOOR_CAR VARCHAR(32),
	STORE_OUT BIT(1) NOT NULL,
	DELIVERED BIT(1) NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT NEED_AND_STORE UNIQUE (NEED_RES, STORE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.FACTORY
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	ENABLE BIT(1) NOT NULL,
	FACTORY_ROLE VARCHAR(32) NOT NULL,
	DEFAULT_STORE VARCHAR(32),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.FORMAT
(
	ID VARCHAR(32) NOT NULL,
	DEFINE VARCHAR(32) NOT NULL,
	FORMAT_VALUE VARCHAR(500) NOT NULL,
	STORE_RES VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.FORMAT_DEFINE
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DATA_TYPE VARCHAR(32) NOT NULL,
	PRIORITY INT NOT NULL,
	RES VARCHAR(32) NOT NULL,
	WORD_CATEGORY_ID VARCHAR(32),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.INVENTORY
(
	ID VARCHAR(32) NOT NULL,
	APPLY_DATE DATETIME NOT NULL,
	CHECK_DATE DATETIME NOT NULL,
	-- 入库日期
	CHECKED_DATE DATETIME COMMENT '入库日期',
	MEMO VARCHAR(200),
	STORE VARCHAR(32) NOT NULL,
	TYPE VARCHAR(32) NOT NULL,
	STOCK_CHANGED BIT(1) NOT NULL,
	APPLY_EMP VARCHAR(32) NOT NULL,
	CHECK_EMP VARCHAR(32),
	STATUS VARCHAR(20) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.INVENTORY_ITEM
(
	INVENTORY VARCHAR(32) NOT NULL,
	STOCK VARCHAR(32) NOT NULL,
	BEFOR_COUNT DECIMAL(19,4) NOT NULL,
	LAST_COUNT DECIMAL(19,4) NOT NULL,
	CHANGE_ITEM VARCHAR(32),
	-- 平/盘盈/盘亏
	CHANGE_TYPE VARCHAR(20) NOT NULL COMMENT '平/盘盈/盘亏',
	CHANGE_COUNT DECIMAL(19,4) NOT NULL,
	MEMO VARCHAR(200),
	ID VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT INVENTORY_STOCK_UNIQUE UNIQUE (INVENTORY, STOCK)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MATERIAL_BACK_STORE_IN
(
	ID VARCHAR(32) NOT NULL,
	REASON VARCHAR(32) NOT NULL,
	DESCRIPTION VARCHAR(200),
	STORE_CHANGE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MATERIAL_STORE_IN
(
	ID VARCHAR(32) NOT NULL,
	STORE_CHANGE VARCHAR(32) NOT NULL,
	CHECK_EMP VARCHAR(32),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MATERIAL_STORE_OUT
(
	ID VARCHAR(32) NOT NULL,
	PRODUCT_BATCH VARCHAR(32),
	RECEIVE_EMP VARCHAR(32),
	STORE_CHANGE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MIDDLE_MAN
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	CONTACT VARCHAR(50) NOT NULL,
	TYPE VARCHAR(32) NOT NULL,
	MEMO VARCHAR(200),
	BANK_NUMBER VARCHAR(50),
	TEL VARCHAR(50),
	BANK_INFO VARCHAR(100),
	BANK VARCHAR(32),
	ENABLE BIT(1) NOT NULL,
	REBATE_PROGRAM VARCHAR(32),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MIDDLE_MONEY_PAY
(
	ID VARCHAR(32) NOT NULL,
	MIDDLE_MAN VARCHAR(32) NOT NULL,
	CUSTOMER_ORDER VARCHAR(32) NOT NULL,
	MONEY DECIMAL(19,3) NOT NULL,
	OPER_DATE TIMESTAMP NOT NULL,
	OPER_EMP VARCHAR(32) NOT NULL,
	DESCRIPTION VARCHAR(200),
	PAY_TYPE VARCHAR(32) NOT NULL,
	CHECK_NUMBER VARCHAR(50),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.MONEY_SAVE
(
	ID VARCHAR(32) NOT NULL,
	PAY_TYPE VARCHAR(32) NOT NULL,
	REMIT_FEE DECIMAL(19,3) NOT NULL,
	USE_CHECK BIT(1) NOT NULL,
	CHECK_NUMBER VARCHAR(50),
	PROXY VARCHAR(32),
	MONEY DECIMAL(19,3) NOT NULL,
	VERSION INT,
	CERTIFICATE VARCHAR(32),
	NUMBER VARCHAR(32),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.NEED_RES
(
	ID VARCHAR(32) NOT NULL,
	CUSTOMER_ORDER VARCHAR(32) NOT NULL,
	TYPE VARCHAR(32) NOT NULL,
	LIMIT_TIME TIMESTAMP,
	REASON VARCHAR(32) NOT NULL,
	MEMO VARCHAR(200),
	CREATE_DATE DATETIME NOT NULL,
	FARE_BY_CUSTOMER BIT(1) NOT NULL,
	POST_CODE VARCHAR(10),
	ADDRESS VARCHAR(200),
	RECEIVE_PERSON VARCHAR(50) NOT NULL,
	RECEIVE_TEL VARCHAR(50) NOT NULL,
	STATUS VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.NO_CONVERT_COUNT
(
	ID VARCHAR(32) NOT NULL,
	RES_UNIT VARCHAR(32) NOT NULL,
	COUNT DECIMAL(19,4) NOT NULL,
	STOCK_CHANGE VARCHAR(32),
	STOCK VARCHAR(32),
	PREPARE_CHANGE VARCHAR(32),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ORDER_BACK
(
	ID VARCHAR(32) NOT NULL,
	REASON VARCHAR(32) NOT NULL,
	VERSION INT,
	CREATE_DATE DATETIME NOT NULL,
	MEMO VARCHAR(200),
	RES_COMPLETE BIT(1) NOT NULL,
	APPLY_EMP VARCHAR(32) NOT NULL,
	MONEY DECIMAL(19,3) NOT NULL,
	CUSTOMER VARCHAR(32) NOT NULL,
	DISPATCHED BIT(1) NOT NULL,
	MONEY_COMPLETE BIT(1) NOT NULL,
	COMPLETE_DATE TIMESTAMP,
	COFIRMED BIT(1) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ORDER_FEE
(
	ID VARCHAR(32) NOT NULL,
	MONEY DECIMAL(19,3) NOT NULL,
	DESCRIPTION VARCHAR(200),
	PAY BIT(1) NOT NULL,
	CUSTOMER_ORDER VARCHAR(32) NOT NULL,
	PAY_TYPE VARCHAR(32) NOT NULL,
	CHECK_NUMBER VARCHAR(50),
	RECEIVE_NAME VARCHAR(50) NOT NULL,
	BANK_NUMBER VARCHAR(50),
	BANK_INFO VARCHAR(100),
	MIDDLE_MONEY BIT(1) NOT NULL,
	DEBIT VARCHAR(32),
	CREDIT VARCHAR(32),
	RECEIVE_INFO VARCHAR(200),
	BANK VARCHAR(32),
	PAY_DATE DATETIME,
	APPLY_DATE DATETIME NOT NULL,
	PAY_EMP VARCHAR(32),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ORDER_ITEM
(
	ID VARCHAR(32) NOT NULL,
	STORE_RES VARCHAR(32),
	NEED_RES VARCHAR(32) NOT NULL,
	COUNT DECIMAL(19,4) NOT NULL,
	MONEY DECIMAL(19,3),
	MIDDLE_MONEY DECIMAL(19,3),
	MIDDLE_RATE DECIMAL(17,6),
	-- A  总金额 * 提点
	-- B  固定金额
	MIDDLE_CALC_TYPE VARCHAR(32) COMMENT 'A  总金额 * 提点
B  固定金额',
	MIDDLE_UNIT VARCHAR(32),
	MONEY_UNIT VARCHAR(32) NOT NULL,
	MEMO VARCHAR(200),
	-- presentation
	PRESENTATION BIT(1) NOT NULL COMMENT 'presentation',
	DISPATCH VARCHAR(32),
	OVERLAY_OUT BIT(1) NOT NULL,
	NEED_CONVERSION_RATE DECIMAL(19,10) NOT NULL,
	TOTAL_MONEY DECIMAL(19,3),
	STATUS VARCHAR(10) NOT NULL,
	REBATE DECIMAL(19,4) NOT NULL,
	NEED_MONEY DECIMAL(19,3),
	NEED_COUNT DECIMAL(19,4),
	SALE_COUNT DECIMAL(19,4) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ORDER_ITEM_REBATE
(
	ID VARCHAR(32) NOT NULL,
	MODE VARCHAR(20) NOT NULL,
	PROGRAM VARCHAR(32) NOT NULL,
	RES VARCHAR(32) NOT NULL,
	CALC_UNIT VARCHAR(32),
	REBATE DECIMAL(17,6),
	PRIMARY KEY (ID),
	CONSTRAINT UNIQUE_PROGRAM_RES UNIQUE (PROGRAM, RES)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.ORDER_REDUCE
(
	ID VARCHAR(32) NOT NULL,
	DESCRIPTION VARCHAR(200),
	MONEY DECIMAL(19,4) NOT NULL,
	CUSTOMER_ORDER VARCHAR(32) NOT NULL,
	TYPE VARCHAR(20) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.OUT_NUMBER
(
	ID VARCHAR(32) NOT NULL,
	BEGIN INT NOT NULL,
	END INT NOT NULL,
	PREFX VARCHAR(32),
	AFTER VARCHAR(32),
	CHANGE_ID VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.OWE_OUT
(
	ID VARCHAR(32) NOT NULL,
	STORE_RES VARCHAR(32) NOT NULL,
	COUNT DECIMAL(19,4) NOT NULL,
	DISPATCH VARCHAR(32) NOT NULL,
	DESCRIPTION VARCHAR(200),
	IS_ADD BIT(1) NOT NULL,
	NEED_CONVERSION_RATE DECIMAL(19,10) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.PREPARE_STOCK_CHANGE
(
	ID VARCHAR(32) NOT NULL,
	COUNT DECIMAL(19,4) NOT NULL,
	STOCK_CHANGE VARCHAR(32) NOT NULL,
	STORE_RES VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.PRICE_ITEM
(
	ID VARCHAR(32) NOT NULL,
	QUOTED VARCHAR(32) NOT NULL,
	STORE_RES VARCHAR(32) NOT NULL,
	COUNT DECIMAL(19,4) NOT NULL,
	MEMO VARCHAR(200),
	MONEY_UNIT VARCHAR(32) NOT NULL,
	MONEY DECIMAL(19,3) NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT UNIQUE_STORERES_QUOTED UNIQUE (QUOTED, STORE_RES)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.PRODUCT_GROUP
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	FACTORY VARCHAR(32) NOT NULL,
	PARENT VARCHAR(32),
	ENABLE BIT(1) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.PRODUCT_GROUP_RES
(
	PRODUCT_GROUP VARCHAR(32) NOT NULL,
	RES VARCHAR(32) NOT NULL,
	PRIMARY KEY (PRODUCT_GROUP, RES)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.PRODUCT_STORE_IN
(
	ID VARCHAR(32) NOT NULL,
	STORE_CHANGE VARCHAR(32) NOT NULL,
	PRODUCT_GROUP VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.QUOTED_PRICE
(
	ID VARCHAR(32) NOT NULL,
	CREATE_DATE TIMESTAMP NOT NULL,
	CREATE_EMP VARCHAR(32) NOT NULL,
	CUSTOMER VARCHAR(32) NOT NULL,
	MEMO VARCHAR(200),
	TYPE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.REBATE_PROGRAM
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(200),
	ENABLE BIT(1) NOT NULL,
	ORDER_MODE VARCHAR(20) NOT NULL,
	REBATE DECIMAL(17,6),
	CALC_ITEM BIT(1) NOT NULL,
	ZERO_ITEM BIT(1) NOT NULL,
	PATCH_ITEM BIT(1) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.RES
(
	ID VARCHAR(32) NOT NULL,
	CATEGORY VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(200),
	ENABLE BIT(1) NOT NULL,
	CODE VARCHAR(50) NOT NULL,
	MASTER_UNIT VARCHAR(32) NOT NULL,
	IN_DEFAULT VARCHAR(32) NOT NULL,
	OUT_DEFAULT VARCHAR(32) NOT NULL,
	UNIT_GROUP VARCHAR(32) NOT NULL,
	ACCOUNTING VARCHAR(32),
	BATCH_MGR BIT(1) NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE (CODE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.RES_CATEGORY
(
	ID VARCHAR(32) NOT NULL,
	CATEGORY VARCHAR(32),
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(200),
	_ROOT BIT(1) NOT NULL,
	ENABLE BIT(1) NOT NULL,
	TYPE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.RES_SALE_REBATE
(
	ID VARCHAR(32) NOT NULL,
	CUSTOMER_ORDER VARCHAR(32) NOT NULL,
	RES VARCHAR(32) NOT NULL,
	RES_UNIT VARCHAR(32) NOT NULL,
	ITEM_REBATE DECIMAL(19,4) NOT NULL,
	COUNT DECIMAL(19,4) NOT NULL,
	MONEY DECIMAL(19,3) NOT NULL,
	REBATE_BASIC_COUNT DECIMAL(19,4) NOT NULL,
	REBATE_RATE_COUNT DECIMAL(19,4) NOT NULL,
	REBATE_COUNT DECIMAL(19,4) NOT NULL,
	REBATE_MONEY DECIMAL(19,4) NOT NULL,
	MEMO VARCHAR(200),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.RES_UNIT
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	CONVERSION_RATE DECIMAL(19,10),
	UNIT_GROUP VARCHAR(32) NOT NULL,
	PRIORITY INT NOT NULL,
	COUNT_FORMAT VARCHAR(20) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SALER_PRICE
(
	ID VARCHAR(32) NOT NULL,
	RES_UNIT VARCHAR(32) NOT NULL,
	RES VARCHAR(32) NOT NULL,
	PRICE DECIMAL(19,3) NOT NULL,
	MIDDLE_MAN VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SALER_STORE_RES_PRICE
(
	ID VARCHAR(32) NOT NULL,
	RES_PRICE VARCHAR(32) NOT NULL,
	STORE_RES VARCHAR(32) NOT NULL,
	RES_UNIT VARCHAR(32) NOT NULL,
	PRICE DECIMAL(19,3) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SALE_PREPARED
(
	_WORD VARCHAR(10) NOT NULL,
	_CODE INT NOT NULL,
	CERTIFICATE_DATE DATETIME NOT NULL,
	PREPARED_EMP VARCHAR(32) NOT NULL,
	MONEY DECIMAL(19,4) NOT NULL,
	APPROVED_EMP VARCHAR(32),
	CHECKED_EMP VARCHAR(32),
	CASHIER VARCHAR(32),
	MEMO VARCHAR(200),
	VOUCHERS_COUNT INT,
	ID VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SCRAP_STORE_OUT
(
	ID VARCHAR(32) NOT NULL,
	REASON VARCHAR(32) NOT NULL,
	DESCRIPTION VARCHAR(200),
	STORE_CHANGE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STOCK
(
	ID VARCHAR(32) NOT NULL,
	RES VARCHAR(32) NOT NULL,
	COUNT DECIMAL(19,4) NOT NULL,
	VERSION INT,
	STORE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT STOCE_STORE_RES_UNIQUE UNIQUE (RES, STORE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STOCK_CHANGE
(
	ID VARCHAR(32) NOT NULL,
	STORE VARCHAR(32) NOT NULL,
	OPER_DATE DATETIME NOT NULL,
	OPER_EMP VARCHAR(32) NOT NULL,
	OPER_TYPE VARCHAR(32) NOT NULL,
	MEMO VARCHAR(200),
	VERIFY BIT(1) NOT NULL,
	INVENTORY VARCHAR(32),
	ALLOCATION VARCHAR(32),
	ASSEMBLY VARCHAR(32),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STOCK_CHANGE_ITEM
(
	ID VARCHAR(32) NOT NULL,
	COUNT DECIMAL(19,4) NOT NULL,
	STORE_CHANGE VARCHAR(32) NOT NULL,
	STORE_RES VARCHAR(32) NOT NULL,
	-- INVENTORY
	STOCK VARCHAR(32) NOT NULL COMMENT 'INVENTORY',
	MEMO VARCHAR(200),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STORE
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(200),
	ADDRESS VARCHAR(200),
	TEL VARCHAR(50),
	ENABLE BIT(1) NOT NULL,
	VERSION INT,
	OPEN BIT(1) NOT NULL,
	ROLE_ID VARCHAR(32) NOT NULL,
	SHIP_ROLE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STORE_AREA
(
	ID VARCHAR(32) NOT NULL,
	STORE VARCHAR(32) NOT NULL,
	PARENT VARCHAR(32),
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(200),
	ENABLE BIT(1) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STORE_CHANGE
(
	ID VARCHAR(32) NOT NULL,
	TYPE VARCHAR(32) NOT NULL,
	MEMO VARCHAR(200),
	STORE_CHANGE VARCHAR(32),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STORE_RES
(
	ID VARCHAR(32) NOT NULL,
	RES VARCHAR(32) NOT NULL,
	CODE VARCHAR(50) NOT NULL,
	STORE_WARN DECIMAL(19,4),
	EXP_WARN INT,
	ENABLE BIT(1) NOT NULL,
	FLOAT_CONVERSION_RATE DECIMAL(19,10),
	PRIMARY KEY (ID),
	UNIQUE (CODE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.STORE_RES_REBATE
(
	ID VARCHAR(32) NOT NULL,
	MODE VARCHAR(20) NOT NULL,
	STORE_RES VARCHAR(32) NOT NULL,
	REBATE DECIMAL(17,6),
	CALC_UNIT VARCHAR(32),
	ORDER_ITEM_REBATE VARCHAR(32),
	PRIMARY KEY (ID),
	CONSTRAINT UNIQUE_RES_ORDER_REBATE_ITEM UNIQUE (STORE_RES, ORDER_ITEM_REBATE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SUPPLIER
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.SUPPLIER_RES
(
	SUPPLIER VARCHAR(32) NOT NULL,
	RES VARCHAR(32) NOT NULL,
	PRIMARY KEY (SUPPLIER, RES)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.TRANS_CORP
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	TEL VARCHAR(50),
	CONTACT VARCHAR(50),
	ENABLE BIT(1) NOT NULL,
	MEMO VARCHAR(200),
	TYPE VARCHAR(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MINI_ERP.UNIT_GROUP
(
	ID VARCHAR(32) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	TYPE VARCHAR(32) NOT NULL,
	FLOAT_CONVERT_FORMAT VARCHAR(20),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;



/* Create Foreign Keys */

ALTER TABLE MINI_ERP.ORDER_FEE
	ADD FOREIGN KEY (DEBIT)
	REFERENCES MINI_ERP.ACCOUNTING (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_FEE
	ADD FOREIGN KEY (CREDIT)
	REFERENCES MINI_ERP.ACCOUNTING (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (ACCOUNTING)
	REFERENCES MINI_ERP.ACCOUNTING (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNTING
	ADD FOREIGN KEY (PARENT)
	REFERENCES MINI_ERP.ACCOUNTING (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE
	ADD FOREIGN KEY (ALLOCATION)
	REFERENCES MINI_ERP.ALLOCATION (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ALLOCATION_RES
	ADD FOREIGN KEY (ALLOCATION)
	REFERENCES MINI_ERP.ALLOCATION (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE
	ADD FOREIGN KEY (ASSEMBLY)
	REFERENCES MINI_ERP.ASSEMBLY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_ITEM
	ADD FOREIGN KEY (DISPATCH)
	REFERENCES MINI_ERP.BACK_DISPATCH (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MONEY_SAVE
	ADD FOREIGN KEY (NUMBER)
	REFERENCES MINI_ERP.BANK_ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MATERIAL_STORE_OUT
	ADD FOREIGN KEY (PRODUCT_BATCH)
	REFERENCES MINI_ERP.BATCH (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.DISPATCH
	ADD FOREIGN KEY (TODOOR_CAR)
	REFERENCES MINI_ERP.CARS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_CHECK_OUT
	ADD FOREIGN KEY (CHECKOUT)
	REFERENCES MINI_ERP.CHECK_OUT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER_ORDER
	ADD FOREIGN KEY (CUSTOMER_ID)
	REFERENCES MINI_ERP.CUSTOMER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER_CONTACT
	ADD FOREIGN KEY (CUSTOMER)
	REFERENCES MINI_ERP.CUSTOMER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.QUOTED_PRICE
	ADD FOREIGN KEY (CUSTOMER)
	REFERENCES MINI_ERP.CUSTOMER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_OPER
	ADD FOREIGN KEY (CUSTOM)
	REFERENCES MINI_ERP.CUSTOMER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_BACK
	ADD FOREIGN KEY (CUSTOMER)
	REFERENCES MINI_ERP.CUSTOMER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER
	ADD FOREIGN KEY (CUSTOMER_AREA)
	REFERENCES MINI_ERP.CUSTOMER_AREA (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER
	ADD FOREIGN KEY (LEVEL)
	REFERENCES MINI_ERP.CUSTOMER_LEVEL (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_REDUCE
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_OPER
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MIDDLE_MONEY_PAY
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.NEED_RES
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_FEE
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES_SALE_REBATE
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.CUSTOMER_ORDER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM
	ADD FOREIGN KEY (DISPATCH)
	REFERENCES MINI_ERP.DISPATCH (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.OWE_OUT
	ADD FOREIGN KEY (DISPATCH)
	REFERENCES MINI_ERP.DISPATCH (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_GROUP
	ADD FOREIGN KEY (FACTORY)
	REFERENCES MINI_ERP.FACTORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.FORMAT
	ADD FOREIGN KEY (DEFINE)
	REFERENCES MINI_ERP.FORMAT_DEFINE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE
	ADD FOREIGN KEY (INVENTORY)
	REFERENCES MINI_ERP.INVENTORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.INVENTORY_ITEM
	ADD FOREIGN KEY (INVENTORY)
	REFERENCES MINI_ERP.INVENTORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MIDDLE_MONEY_PAY
	ADD FOREIGN KEY (MIDDLE_MAN)
	REFERENCES MINI_ERP.MIDDLE_MAN (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER
	ADD FOREIGN KEY (MIDDLE_MAN)
	REFERENCES MINI_ERP.MIDDLE_MAN (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_PRICE
	ADD FOREIGN KEY (MIDDLE_MAN)
	REFERENCES MINI_ERP.MIDDLE_MAN (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_OPER
	ADD FOREIGN KEY (SAVEING)
	REFERENCES MINI_ERP.MONEY_SAVE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM
	ADD FOREIGN KEY (NEED_RES)
	REFERENCES MINI_ERP.NEED_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.DISPATCH
	ADD FOREIGN KEY (NEED_RES)
	REFERENCES MINI_ERP.NEED_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_OPER
	ADD FOREIGN KEY (ORDER_BACK)
	REFERENCES MINI_ERP.ORDER_BACK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_ITEM
	ADD FOREIGN KEY (BACK_ORDER)
	REFERENCES MINI_ERP.ORDER_BACK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_DISPATCH
	ADD FOREIGN KEY (CUSTOMER_ORDER)
	REFERENCES MINI_ERP.ORDER_BACK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_RES_REBATE
	ADD FOREIGN KEY (ORDER_ITEM_REBATE)
	REFERENCES MINI_ERP.ORDER_ITEM_REBATE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.NO_CONVERT_COUNT
	ADD FOREIGN KEY (PREPARE_CHANGE)
	REFERENCES MINI_ERP.PREPARE_STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_GROUP
	ADD FOREIGN KEY (PARENT)
	REFERENCES MINI_ERP.PRODUCT_GROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_GROUP_RES
	ADD FOREIGN KEY (PRODUCT_GROUP)
	REFERENCES MINI_ERP.PRODUCT_GROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_STORE_IN
	ADD FOREIGN KEY (PRODUCT_GROUP)
	REFERENCES MINI_ERP.PRODUCT_GROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRICE_ITEM
	ADD FOREIGN KEY (QUOTED)
	REFERENCES MINI_ERP.QUOTED_PRICE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CUSTOMER
	ADD FOREIGN KEY (REBATE_PROGRAM)
	REFERENCES MINI_ERP.REBATE_PROGRAM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM_REBATE
	ADD FOREIGN KEY (PROGRAM)
	REFERENCES MINI_ERP.REBATE_PROGRAM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MIDDLE_MAN
	ADD FOREIGN KEY (REBATE_PROGRAM)
	REFERENCES MINI_ERP.REBATE_PROGRAM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.FORMAT_DEFINE
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_PRICE
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES_SALE_REBATE
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SUPPLIER_RES
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_GROUP_RES
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM_REBATE
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_RES
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES_CATEGORY
	ADD FOREIGN KEY (CATEGORY)
	REFERENCES MINI_ERP.RES_CATEGORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (CATEGORY)
	REFERENCES MINI_ERP.RES_CATEGORY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (IN_DEFAULT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (MASTER_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_ITEM
	ADD FOREIGN KEY (MONEY_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (OUT_DEFAULT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_RES_REBATE
	ADD FOREIGN KEY (CALC_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES_SALE_REBATE
	ADD FOREIGN KEY (RES_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_STORE_RES_PRICE
	ADD FOREIGN KEY (RES_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRICE_ITEM
	ADD FOREIGN KEY (MONEY_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM
	ADD FOREIGN KEY (MIDDLE_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM
	ADD FOREIGN KEY (MONEY_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_PRICE
	ADD FOREIGN KEY (RES_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM_REBATE
	ADD FOREIGN KEY (CALC_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.NO_CONVERT_COUNT
	ADD FOREIGN KEY (RES_UNIT)
	REFERENCES MINI_ERP.RES_UNIT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_STORE_RES_PRICE
	ADD FOREIGN KEY (RES_PRICE)
	REFERENCES MINI_ERP.SALER_PRICE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MONEY_SAVE
	ADD FOREIGN KEY (CERTIFICATE)
	REFERENCES MINI_ERP.SALE_PREPARED (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.CERTIFICATE_ITEM
	ADD FOREIGN KEY (CERTIFICATE)
	REFERENCES MINI_ERP.SALE_PREPARED (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ACCOUNT_OPER
	ADD FOREIGN KEY (CERTIFICATE)
	REFERENCES MINI_ERP.SALE_PREPARED (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.NO_CONVERT_COUNT
	ADD FOREIGN KEY (STOCK)
	REFERENCES MINI_ERP.STOCK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.INVENTORY_ITEM
	ADD FOREIGN KEY (STOCK)
	REFERENCES MINI_ERP.STOCK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE_ITEM
	ADD FOREIGN KEY (STOCK)
	REFERENCES MINI_ERP.STOCK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE_ITEM
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_CHANGE
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SCRAP_STORE_OUT
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MATERIAL_STORE_IN
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MATERIAL_STORE_OUT
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRODUCT_STORE_IN
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.DISPATCH
	ADD FOREIGN KEY (STOCK_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PREPARE_STOCK_CHANGE
	ADD FOREIGN KEY (STOCK_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_DISPATCH
	ADD FOREIGN KEY (STOCK_CNAHGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MATERIAL_BACK_STORE_IN
	ADD FOREIGN KEY (STORE_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.OUT_NUMBER
	ADD FOREIGN KEY (CHANGE_ID)
	REFERENCES MINI_ERP.STOCK_CHANGE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.NO_CONVERT_COUNT
	ADD FOREIGN KEY (STOCK_CHANGE)
	REFERENCES MINI_ERP.STOCK_CHANGE_ITEM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.INVENTORY_ITEM
	ADD FOREIGN KEY (CHANGE_ITEM)
	REFERENCES MINI_ERP.STOCK_CHANGE_ITEM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_DISPATCH
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.DISPATCH
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.FACTORY
	ADD FOREIGN KEY (DEFAULT_STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_AREA
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ALLOCATION
	ADD FOREIGN KEY (APPLY_STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ALLOCATION
	ADD FOREIGN KEY (TARGET_STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.INVENTORY
	ADD FOREIGN KEY (STORE)
	REFERENCES MINI_ERP.STORE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_AREA
	ADD FOREIGN KEY (PARENT)
	REFERENCES MINI_ERP.STORE_AREA (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SALER_STORE_RES_PRICE
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BOM
	ADD FOREIGN KEY (SOURCE)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ALLOCATION_RES
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STORE_RES_REBATE
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.OWE_OUT
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.ORDER_ITEM
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BACK_ITEM
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BATCH
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PREPARE_STOCK_CHANGE
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK
	ADD FOREIGN KEY (RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.PRICE_ITEM
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BOM
	ADD FOREIGN KEY (TARGET)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.STOCK_CHANGE_ITEM
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.FORMAT
	ADD FOREIGN KEY (STORE_RES)
	REFERENCES MINI_ERP.STORE_RES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.BATCH
	ADD FOREIGN KEY (SUPPLIER)
	REFERENCES MINI_ERP.SUPPLIER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.SUPPLIER_RES
	ADD FOREIGN KEY (SUPPLIER)
	REFERENCES MINI_ERP.SUPPLIER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.MONEY_SAVE
	ADD FOREIGN KEY (PROXY)
	REFERENCES MINI_ERP.TRANS_CORP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.DISPATCH
	ADD FOREIGN KEY (TRANS_CORP)
	REFERENCES MINI_ERP.TRANS_CORP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES_UNIT
	ADD FOREIGN KEY (UNIT_GROUP)
	REFERENCES MINI_ERP.UNIT_GROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MINI_ERP.RES
	ADD FOREIGN KEY (UNIT_GROUP)
	REFERENCES MINI_ERP.UNIT_GROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



