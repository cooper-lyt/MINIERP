package com.dgsoft.common.system.model;
// Generated Apr 28, 2013 11:02:59 AM by Hibernate Tools 4.0.0

import com.dgsoft.common.OrderBean;
import org.hibernate.annotations.GenericGenerator;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * SimpleVarSubscribe generated by hbm2java
 */
@Entity
@Table(name = "SIMPLE_VAR_SUBSCRIBE", catalog = "DG_SYSTEM", uniqueConstraints = @UniqueConstraint(columnNames = {
        "WF_TASK", "WF_VER", "BUSINESS_DEFIN", "VARIABLE"}))
public class SimpleVarSubscribe implements java.io.Serializable, OrderBean {

    private String id;
    private BusinessDefine businessDefine;
    private SimpleVarDefine simpleVarDefine;
    private String wfTask;
    private String wfVer;
    private int priority;
    private boolean request;
    private boolean readonly;
    private int size;

    public SimpleVarSubscribe() {
        super();
    }

    public SimpleVarSubscribe(BusinessDefine businessDefine,
                              SimpleVarDefine simpleVarDefine, String wfTask, String wfVer, Integer priority) {
        this();
        request = true;
        readonly = false;
        this.businessDefine = businessDefine;
        this.wfTask = wfTask;
        this.wfVer = wfVer;
        this.simpleVarDefine = simpleVarDefine;
        this.priority = priority;
    }

    public SimpleVarSubscribe(BusinessDefine businessDefine,String wfTask, String wfVer, SimpleVarSubscribe other) {
        this(businessDefine,other.getSimpleVarDefine(), wfTask,wfVer,other.getPriority());
        this.readonly = other.isReadonly();
        this.request = other.isRequest();
    }

    @Id
    @Column(name = "ID", unique = true, nullable = false, length = 32)
    @NotNull
    @Size(max = 32)
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid.hex")
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }


    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "BUSINESS_DEFIN", nullable = false)
    @NotNull
    public BusinessDefine getBusinessDefine() {
        return this.businessDefine;
    }

    public void setBusinessDefine(BusinessDefine businessDefine) {
        this.businessDefine = businessDefine;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = {CascadeType.PERSIST})
    @JoinColumn(name = "VARIABLE", nullable = false)
    @NotNull
    public SimpleVarDefine getSimpleVarDefine() {
        return simpleVarDefine;
    }

    public void setSimpleVarDefine(SimpleVarDefine simpleVarDefine) {
        this.simpleVarDefine = simpleVarDefine;
    }

    @Column(name = "WF_TASK", nullable = false, length = 32)
    @NotNull
    @Size(max = 32)
    public String getWfTask() {
        return this.wfTask;
    }

    public void setWfTask(String wfSection) {
        this.wfTask = wfSection;
    }

    @Column(name = "WF_VER", nullable = false, length = 32)
    @NotNull
    @Size(max = 32)
    public String getWfVer() {
        return this.wfVer;
    }

    public void setWfVer(String wfVer) {
        this.wfVer = wfVer;
    }


    @Column(name = "PRIORITY",nullable = false)
    public int getPriority() {
        return this.priority;
    }

    public void setPriority(int priority) {
        this.priority = priority;
    }

    @Column(name = "REQUEST", nullable = false)
    @NotNull
    public boolean isRequest() {
        return request;
    }

    public void setRequest(boolean request) {
        this.request = request;
    }

    @Column(name = "READONLY", nullable = false)
    @NotNull
    public boolean isReadonly() {
        return readonly;
    }

    public void setReadonly(boolean readonly) {
        this.readonly = readonly;
    }

    @Column(name="SIZE",nullable = false)
    @NotNull
    public int getSize() {
        return size;
    }

    public void setSize(int size) {
        this.size = size;
    }
}
