package com.dgsoft.common.system.model;
// Generated May 7, 2013 11:49:56 AM by Hibernate Tools 4.0.0

import com.dgsoft.common.OrderBean;
import com.dgsoft.common.OrderBeanComparator;
import org.hibernate.annotations.GenericGenerator;

import java.util.*;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * RoleCategory generated by hbm2java
 */
@Entity
@Table(name = "ROLE_CATEGORY", catalog = "DG_SYSTEM")
public class RoleCategory implements OrderBean,java.io.Serializable {

    private String id;
    private String name;
    private String description;
    private int priority;
    private boolean system;

    private Set<Function> functions = new HashSet<Function>(0);
    private Set<Role> roles = new HashSet<Role>(
            0);

    public RoleCategory() {
    }

    public RoleCategory(String id, String name) {
        this.id = id;
        this.name = name;
    }

    @Id
    @Column(name = "ID", unique = true, nullable = false, length = 32)
    @NotNull
    @GeneratedValue(generator = "paymentableGenerator")
    @GenericGenerator(name = "paymentableGenerator",strategy = "uuid")
    @Size(max = 32)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Column(name = "NAME", nullable = false, length = 50)
    @NotNull
    @Size(max = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "DESCRIPTION", length = 200)
    @Size(max = 200)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @ManyToMany(fetch = FetchType.EAGER, targetEntity = Role.class)
    @JoinTable(name = "ROLE_ROLE_CATEGROY", joinColumns = @JoinColumn(name = "CAT_ID"), inverseJoinColumns = @JoinColumn(name = "ROLE_ID"))
    public Set<Role> getRoles() {
        return roles;
    }

    public void setRoles(Set<Role> roles) {
        this.roles = roles;
    }

    @ManyToMany(fetch = FetchType.LAZY, targetEntity = Function.class)
    @JoinTable(name="ROLE_FUNCTION", joinColumns = @JoinColumn(name="ROL_CATE_ID"),inverseJoinColumns = @JoinColumn(name= "FUN_ID"))
    public Set<Function> getFunctions() {
        return functions;
    }

    public void setFunctions(Set<Function> functions) {
        this.functions = functions;
    }

    @Transient
    public List<Function> getFunctionList(){
        List<Function> result = new ArrayList<Function>(getFunctions());
        Collections.sort(result, OrderBeanComparator.getInstance());
        return result;
    }

    @Column(name = "PRIORITY", nullable = false)
    public int getPriority() {
        return priority;
    }

    public void setPriority(int priority) {
        this.priority = priority;
    }

    @Column(name = "SYSTEM", nullable = false)
    public boolean isSystem() {
        return system;
    }

    public void setSystem(boolean system) {
        this.system = system;
    }
}
