package com.dgsoft.erp.model;
// Generated Sep 25, 2013 4:34:50 PM by Hibernate Tools 4.0.0

import com.dgsoft.common.OrderModel;
import org.hibernate.annotations.GenericGenerator;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.HashSet;
import java.util.Set;

/**
 * FormatDefine generated by hbm2java
 */
@Entity
@Cacheable
@Table(name = "FORMAT_DEFINE", catalog = "MINI_ERP")
public class FormatDefine implements java.io.Serializable,OrderModel {

    public enum FormatType{
        WORD,INTEGER,FLOAT;
    }

	private String id;
	private Res res;
	private String name;
	private FormatType dataType;
	private int priority;
	private String wordCategory;
	private Set<Format> formats = new HashSet<Format>(0);

	public FormatDefine() {
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid.hex")
	@NotNull
	@Size(max = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RES", nullable = false)
	@NotNull
	public Res getRes() {
		return this.res;
	}

	public void setRes(Res res) {
		this.res = res;
	}

	@Column(name = "NAME", nullable = false, length = 50)
	@NotNull
	@Size(max = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DATA_TYPE", nullable = false, length = 32)
    @Enumerated(EnumType.STRING)
	@NotNull
	public FormatType getDataType() {
		return this.dataType;
	}

	public void setDataType(FormatType dataType) {
		this.dataType = dataType;
	}

	@Column(name = "PRIORITY", nullable = false)
	public int getPriority() {
		return this.priority;
	}

	public void setPriority(int priority) {
		this.priority = priority;
	}

	@Column(name = "WORD_CATEGORY_ID", length = 32)
	@Size(max = 32)
	public String getWordCategory() {
		return this.wordCategory;
	}

	public void setWordCategory(String wordCategory) {
		this.wordCategory = wordCategory;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "formatDefine")
	public Set<Format> getFormats() {
		return this.formats;
	}

	public void setFormats(Set<Format> formats) {
		this.formats = formats;
	}

    @Override
    @Transient
    public boolean equals(Object other){
        if (other == null){
            return false;
        }
        if (other == this){
            return true;
        }

        if (!(other instanceof FormatDefine)){
            return false;
        }

        FormatDefine otherRes = (FormatDefine) other;

        if ((otherRes.getId() != null) && (!"".equals(otherRes.getId().trim()))){
            return otherRes.getId().equals(getId());
        }


        return false;
    }

    @Override
    @Transient
    public int hashCode(){
        if ((getId() != null) && (!"".equals(getId().trim()))){
            return getId().hashCode();
        }else{
            return super.hashCode();
        }
    }

}
