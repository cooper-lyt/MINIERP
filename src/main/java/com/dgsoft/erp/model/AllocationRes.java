package com.dgsoft.erp.model;
// Generated Oct 17, 2013 5:33:51 PM by Hibernate Tools 4.0.0

import com.dgsoft.erp.ResFormatCache;
import com.dgsoft.erp.action.ResHelper;
import com.dgsoft.erp.model.api.StoreResCountEntity;
import org.hibernate.annotations.GenericGenerator;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.math.BigDecimal;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * AllocationRes generated by hbm2java
 */
@Entity
@Table(name = "ALLOCATION_RES", catalog = "MINI_ERP")
public class AllocationRes extends StoreResCountEntity implements java.io.Serializable {

    private String id;
    private StoreRes storeRes;
    private Allocation allocation;
    private BigDecimal count;

    public AllocationRes() {
    }

    public AllocationRes(Res res) {
        super(res, res.getResUnitByInDefault());
    }

    public AllocationRes(StoreRes storeRes) {
        super(storeRes, storeRes.getRes().getResUnitByInDefault());
    }

    public AllocationRes(StoreRes storeRes, Allocation allocation,
                         BigDecimal count) {
        this.storeRes = storeRes;
        this.allocation = allocation;
        this.count = count;
    }

    @Id
    @Column(name = "ID", unique = true, nullable = false, length = 32)
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid.hex")
    @NotNull
    @Size(max = 32)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STORE_RES", nullable = false)
    @NotNull
    public StoreRes getStoreRes() {
        return this.storeRes;
    }

    public void setStoreRes(StoreRes storeRes) {
        this.storeRes = storeRes;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ALLOCATION", nullable = false)
    @NotNull
    public Allocation getAllocation() {
        return this.allocation;
    }

    public void setAllocation(Allocation allocation) {
        this.allocation = allocation;
    }

    @Column(name = "COUNT", nullable = false, scale = 4)
    @NotNull
    public BigDecimal getCount() {
        return this.count;
    }

    public void setCount(BigDecimal count) {
        this.count = count;
    }

}
