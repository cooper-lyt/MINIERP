package com.dgsoft.erp.model;
// Generated Oct 30, 2013 3:06:10 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * Dispatch generated by hbm2java
 */
@Entity
@Table(name = "DISPATCH", catalog = "MINI_ERP", uniqueConstraints = @UniqueConstraint(columnNames = {
		"NEED_RES", "STORE"}))
public class Dispatch implements java.io.Serializable {

	private String id;
	private Store store;
	private StockChange stockChange;
	private ExpressInfo expressInfo;
	private ProductToDoor productToDoor;
	private ExpressCar expressCar;
	private NeedRes needRes;
	private String deliveryType;
	private Date sendTime;
	private String farePayType;
	private BigDecimal fare;
	private String sendEmp;
	private String state;
	private String outCustomer;
	private String memo;

    private Set<DispatchItem> dispatchItems = new HashSet<DispatchItem>(0);

	public Dispatch() {
	}



	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STORE", nullable = false)
	@NotNull
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STOCK_CHANGE")
	public StockChange getStockChange() {
		return this.stockChange;
	}

	public void setStockChange(StockChange stockChange) {
		this.stockChange = stockChange;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EXPRESS_INFO")
	public ExpressInfo getExpressInfo() {
		return this.expressInfo;
	}

	public void setExpressInfo(ExpressInfo expressInfo) {
		this.expressInfo = expressInfo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRODUCT_TO_DOOR")
	public ProductToDoor getProductToDoor() {
		return this.productToDoor;
	}

	public void setProductToDoor(ProductToDoor productToDoor) {
		this.productToDoor = productToDoor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EXPRESS_CAR")
	public ExpressCar getExpressCar() {
		return this.expressCar;
	}

	public void setExpressCar(ExpressCar expressCar) {
		this.expressCar = expressCar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NEED_RES", nullable = false)
	@NotNull
	public NeedRes getNeedRes() {
		return this.needRes;
	}

	public void setNeedRes(NeedRes needRes) {
		this.needRes = needRes;
	}

	@Column(name = "DELIVERY_TYPE", nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getDeliveryType() {
		return this.deliveryType;
	}

	public void setDeliveryType(String deliveryType) {
		this.deliveryType = deliveryType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SEND_TIME", length = 19)
	public Date getSendTime() {
		return this.sendTime;
	}

	public void setSendTime(Date sendTime) {
		this.sendTime = sendTime;
	}

	@Column(name = "FARE_PAY_TYPE", nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getFarePayType() {
		return this.farePayType;
	}

	public void setFarePayType(String farePayType) {
		this.farePayType = farePayType;
	}

	@Column(name = "FARE", scale = 3)
	public BigDecimal getFare() {
		return this.fare;
	}

	public void setFare(BigDecimal fare) {
		this.fare = fare;
	}

	@Column(name = "SEND_EMP", length = 32)
	@Size(max = 32)
	public String getSendEmp() {
		return this.sendEmp;
	}

	public void setSendEmp(String sendEmp) {
		this.sendEmp = sendEmp;
	}

	@Column(name = "STATE", nullable = false, length = 20)
	@NotNull
	@Size(max = 20)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "OUT_CUSTOMER", length = 50)
	@Size(max = 50)
	public String getOutCustomer() {
		return this.outCustomer;
	}

	public void setOutCustomer(String outCustomer) {
		this.outCustomer = outCustomer;
	}

	@Column(name = "MEMO", length = 200)
	@Size(max = 200)
	public String getMemo() {
		return this.memo;
	}

	public void setMemo(String memo) {
		this.memo = memo;
	}

    @OneToMany(fetch = FetchType.LAZY,mappedBy = "dispatch")
    public Set<DispatchItem> getDispatchItems() {
        return dispatchItems;
    }

    public void setDispatchItems(Set<DispatchItem> dispatchItems) {
        this.dispatchItems = dispatchItems;
    }
}
