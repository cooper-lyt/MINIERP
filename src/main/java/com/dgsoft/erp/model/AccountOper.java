package com.dgsoft.erp.model;
// Generated Oct 17, 2013 5:33:51 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * AccountOper generated by hbm2java
 */
@Entity
@Table(name = "ACCOUNT_OPER", catalog = "MINI_ERP")
public class AccountOper implements java.io.Serializable {

	private String id;
	private Accounting accountingByDebit;
	private Customer customer;
	private Accounting accountingByCredit;
	private String operEmp;
	private BigDecimal operMoney;
	private String operType;
	private Date operDate;
	private BigDecimal beforMoney;
	private BigDecimal afterMoney;
	private String description;
	private String payType;
	private String checkNumber;
	private Set<CustomerOrder> customerOrder = new HashSet<CustomerOrder>(0);
	private Set<OrderBack> orderBack = new HashSet<OrderBack>(0);
	private Set<BackPrepareMoney> backPrepareMoneys = new HashSet<BackPrepareMoney>(
			0);
	private Set<PreparePay> preparePays = new HashSet<PreparePay>(0);

	public AccountOper() {
	}

	public AccountOper(String id, Customer customer, String operEmp,
			BigDecimal operMoney, String operType, Date operDate,
			BigDecimal beforMoney, BigDecimal afterMoney) {
		this.id = id;
		this.customer = customer;
		this.operEmp = operEmp;
		this.operMoney = operMoney;
		this.operType = operType;
		this.operDate = operDate;
		this.beforMoney = beforMoney;
		this.afterMoney = afterMoney;
	}


	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DEBIT")
	public Accounting getAccountingByDebit() {
		return this.accountingByDebit;
	}

	public void setAccountingByDebit(Accounting accountingByDebit) {
		this.accountingByDebit = accountingByDebit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CUSTOM", nullable = false)
	@NotNull
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREDIT")
	public Accounting getAccountingByCredit() {
		return this.accountingByCredit;
	}

	public void setAccountingByCredit(Accounting accountingByCredit) {
		this.accountingByCredit = accountingByCredit;
	}

	@Column(name = "OPER_EMP", nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getOperEmp() {
		return this.operEmp;
	}

	public void setOperEmp(String operEmp) {
		this.operEmp = operEmp;
	}

	@Column(name = "OPER_MONEY", nullable = false, scale = 3)
	@NotNull
	public BigDecimal getOperMoney() {
		return this.operMoney;
	}

	public void setOperMoney(BigDecimal operMoney) {
		this.operMoney = operMoney;
	}

	@Column(name = "OPER_TYPE", nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getOperType() {
		return this.operType;
	}

	public void setOperType(String operType) {
		this.operType = operType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "OPER_DATE", nullable = false, length = 19)
	@NotNull
	public Date getOperDate() {
		return this.operDate;
	}

	public void setOperDate(Date operDate) {
		this.operDate = operDate;
	}

	@Column(name = "BEFOR_MONEY", nullable = false, scale = 3)
	@NotNull
	public BigDecimal getBeforMoney() {
		return this.beforMoney;
	}

	public void setBeforMoney(BigDecimal beforMoney) {
		this.beforMoney = beforMoney;
	}

	@Column(name = "AFTER_MONEY", nullable = false, scale = 3)
	@NotNull
	public BigDecimal getAfterMoney() {
		return this.afterMoney;
	}

	public void setAfterMoney(BigDecimal afterMoney) {
		this.afterMoney = afterMoney;
	}

	@Column(name = "DESCRIPTION", length = 200)
	@Size(max = 200)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "PAY_TYPE", length = 32)
	@Size(max = 32)
	public String getPayType() {
		return this.payType;
	}

	public void setPayType(String payType) {
		this.payType = payType;
	}

	@Column(name = "CHECK_NUMBER", length = 50)
	@Size(max = 50)
	public String getCheckNumber() {
		return this.checkNumber;
	}

	public void setCheckNumber(String checkNumber) {
		this.checkNumber = checkNumber;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "accountOper")
	public Set<CustomerOrder> getCustomerOrder() {
		return this.customerOrder;
	}

	public void setCustomerOrder(Set<CustomerOrder> orderPays) {
		this.customerOrder = orderPays;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountOper")
	public Set<OrderBack> getOrderBack() {
		return this.orderBack;
	}

	public void setOrderBack(Set<OrderBack> backMoneys) {
		this.orderBack = backMoneys;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountOper")
	public Set<BackPrepareMoney> getBackPrepareMoneys() {
		return this.backPrepareMoneys;
	}

	public void setBackPrepareMoneys(Set<BackPrepareMoney> backPrepareMoneys) {
		this.backPrepareMoneys = backPrepareMoneys;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountOper")
	public Set<PreparePay> getPreparePays() {
		return this.preparePays;
	}

	public void setPreparePays(Set<PreparePay> preparePays) {
		this.preparePays = preparePays;
	}

}
