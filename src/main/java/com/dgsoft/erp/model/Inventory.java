package com.dgsoft.erp.model;
// Generated Oct 1, 2013 5:41:32 PM by Hibernate Tools 4.0.0

import org.hibernate.annotations.GenericGenerator;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * Inventory generated by hbm2java
 */
@Entity
@Table(name = "INVENTORY", catalog = "MINI_ERP")
public class Inventory implements java.io.Serializable {

	private String id;
	private Integer version;
	private StoreRes storeRes;
	private StoreArea storeArea;
	private BigDecimal count;
	private Set<StoreChangeItem> storeChangeItems = new HashSet<StoreChangeItem>(
			0);

	public Inventory() {
	}

	public Inventory(StoreRes storeRes, StoreArea storeArea,
			BigDecimal count) {
		this.storeRes = storeRes;
		this.storeArea = storeArea;
		this.count = count;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid.hex")
	@NotNull
	@Size(max = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade = {CascadeType.PERSIST})
	@JoinColumn(name = "RES", nullable = false)
	@NotNull
	public StoreRes getStoreRes() {
		return this.storeRes;
	}

	public void setStoreRes(StoreRes storeRes) {
		this.storeRes = storeRes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STORE_AREA", nullable = false)
	@NotNull
	public StoreArea getStoreArea() {
		return this.storeArea;
	}

	public void setStoreArea(StoreArea storeArea) {
		this.storeArea = storeArea;
	}

	@Column(name = "COUNT", nullable = false, scale = 4)
	@NotNull
	public BigDecimal getCount() {
		return this.count;
	}

	public void setCount(BigDecimal count) {
		this.count = count;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "inventory")
	public Set<StoreChangeItem> getStoreChangeItems() {
		return this.storeChangeItems;
	}

	public void setStoreChangeItems(Set<StoreChangeItem> storeChangeItems) {
		this.storeChangeItems = storeChangeItems;
	}

}
