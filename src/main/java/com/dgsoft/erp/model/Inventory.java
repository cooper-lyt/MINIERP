package com.dgsoft.erp.model;
// Generated Oct 17, 2013 5:33:51 PM by Hibernate Tools 4.0.0

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.Date;

/**
 * Inventory generated by hbm2java
 */
@Entity
@Table(name = "INVENTORY", catalog = "MINI_ERP")
public class Inventory implements java.io.Serializable {

    public enum InventoryType{
        INIT_INVENTORY,MONTH_INVENTORY,YEAR_INVENTORY,RANDOM_INVENTORY;
    }

	private String id;
	private Store store;
	private StockChange stockChangeLoss;
	private StockChange stockChangeAdd;
	private Date checkDate;
    private Date checkedDate;
    private Date applyDate;
	private String memo;
    private InventoryType type;
    private String applyEmp;
    private boolean stockChanged;

	public Inventory() {
	}

    public Inventory(boolean stockChanged){
        stockChanged = false;
    }

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STORE", nullable = false)
	@NotNull
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}


    @OneToOne(optional = true, fetch = FetchType.LAZY, cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH})
    @JoinColumn(name = "LOSS_RES", unique = true, nullable = true, updatable = true)
	public StockChange getStockChangeLoss() {
		return this.stockChangeLoss;
	}

	public void setStockChangeLoss(StockChange stockChangeByLossRes) {
		this.stockChangeLoss = stockChangeByLossRes;
	}

    @OneToOne(optional = true, fetch = FetchType.LAZY, cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH})
    @JoinColumn(name = "ADD_RES", unique = true, nullable = true, updatable = true)
	public StockChange getStockChangeAdd() {
		return this.stockChangeAdd;
	}

	public void setStockChangeAdd(StockChange stockChangeByAddRes) {
		this.stockChangeAdd = stockChangeByAddRes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CHECK_DATE", nullable = true, length = 19)
	public Date getCheckDate() {
		return this.checkDate;
	}

	public void setCheckDate(Date checkDate) {
		this.checkDate = checkDate;
	}

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CHECKED_DATE", nullable = true, length = 19)
    public Date getCheckedDate() {
        return checkedDate;
    }

    public void setCheckedDate(Date checkedDate) {
        this.checkedDate = checkedDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "APPLY_DATE", nullable = false, length = 19)
    @NotNull
    public Date getApplyDate() {
        return applyDate;
    }

    public void setApplyDate(Date applyDate) {
        this.applyDate = applyDate;
    }

    @Column(name = "MEMO", length = 200)
	@Size(max = 200)
	public String getMemo() {
		return this.memo;
	}

	public void setMemo(String memo) {
		this.memo = memo;
	}


    @Enumerated(EnumType.STRING)
    @Column(name = "TYPE",nullable = false,length = 32)
    @NotNull
    public InventoryType getType() {

        return type;
    }

    public void setType(InventoryType type) {
        this.type = type;
    }

    @Column(name = "STOCK_CHANGED",nullable = false)
    public boolean isStockChanged() {
        return stockChanged;
    }

    public void setStockChanged(boolean stockChanged) {
        this.stockChanged = stockChanged;
    }

    @Column(name="APPLY_EMP",nullable = false,length = 32)
    @NotNull
    @Size(max = 32)
    public String getApplyEmp() {
        return applyEmp;
    }

    public void setApplyEmp(String applyEmp) {
        this.applyEmp = applyEmp;
    }
}
