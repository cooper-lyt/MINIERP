package com.dgsoft.erp.model;
// Generated Oct 17, 2013 5:33:51 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * Batch generated by hbm2java
 */
@Entity
@Table(name = "BATCH", catalog = "MINI_ERP")
public class Batch implements java.io.Serializable {

	private String id;
	private Supplier supplier;
    private boolean produce;
    private boolean storeIn;
	private Date proDate;
	private Date expDate;
	private Set<BackRes> backReses = new HashSet<BackRes>(0);
	private Set<MaterialStoreOut> materialStoreOuts = new HashSet<MaterialStoreOut>(
			0);
	private Set<ProductStoreIn> productStoreIns = new HashSet<ProductStoreIn>(0);
	private Set<StockChangeItem> stockChangeItems = new HashSet<StockChangeItem>(
			0);
	private Set<BatchStoreCount> batchStoreCounts = new HashSet<BatchStoreCount>(
			0);

	public Batch() {
	}

	public Batch(String id, Date proDate, Date expDate) {
		this.id = id;
		this.proDate = proDate;
		this.expDate = expDate;
	}
	public Batch(String id, Supplier supplier, Date proDate, Date expDate,
			Set<BackRes> backReses, Set<MaterialStoreOut> materialStoreOuts,
			Set<ProductStoreIn> productStoreIns,
			Set<StockChangeItem> stockChangeItems,
			Set<BatchStoreCount> batchStoreCounts) {
		this.id = id;
		this.supplier = supplier;
		this.proDate = proDate;
		this.expDate = expDate;
		this.backReses = backReses;
		this.materialStoreOuts = materialStoreOuts;
		this.productStoreIns = productStoreIns;
		this.stockChangeItems = stockChangeItems;
		this.batchStoreCounts = batchStoreCounts;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
	@NotNull
	@Size(max = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUPPLIER")
	public Supplier getSupplier() {
		return this.supplier;
	}

	public void setSupplier(Supplier supplier) {
		this.supplier = supplier;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PRO_DATE", nullable = false, length = 19)
	@NotNull
	public Date getProDate() {
		return this.proDate;
	}

	public void setProDate(Date proDate) {
		this.proDate = proDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EXP_DATE", nullable = false, length = 19)
	@NotNull
	public Date getExpDate() {
		return this.expDate;
	}

	public void setExpDate(Date expDate) {
		this.expDate = expDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "batch")
	public Set<BackRes> getBackReses() {
		return this.backReses;
	}

	public void setBackReses(Set<BackRes> backReses) {
		this.backReses = backReses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "batch")
	public Set<MaterialStoreOut> getMaterialStoreOuts() {
		return this.materialStoreOuts;
	}

	public void setMaterialStoreOuts(Set<MaterialStoreOut> materialStoreOuts) {
		this.materialStoreOuts = materialStoreOuts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "batch")
	public Set<ProductStoreIn> getProductStoreIns() {
		return this.productStoreIns;
	}

	public void setProductStoreIns(Set<ProductStoreIn> productStoreIns) {
		this.productStoreIns = productStoreIns;
	}

    @Column(name = "PRODUCE", nullable = false)
    public boolean isProduce() {
        return produce;
    }

    public void setProduce(boolean product) {
        this.produce = product;
    }

    @Column(name = "STORE_IN", nullable = false)
    public boolean isStoreIn() {
        return storeIn;
    }

    public void setStoreIn(boolean storeIn) {
        this.storeIn = storeIn;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "batch")
	public Set<StockChangeItem> getStockChangeItems() {
		return this.stockChangeItems;
	}

	public void setStockChangeItems(Set<StockChangeItem> stockChangeItems) {
		this.stockChangeItems = stockChangeItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "batch")
	public Set<BatchStoreCount> getBatchStoreCounts() {
		return this.batchStoreCounts;
	}

	public void setBatchStoreCounts(Set<BatchStoreCount> batchStoreCounts) {
		this.batchStoreCounts = batchStoreCounts;
	}

}
