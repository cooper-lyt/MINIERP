package com.dgsoft.erp.model;
// Generated Oct 30, 2013 3:06:10 PM by Hibernate Tools 4.0.0

import com.dgsoft.common.DataFormat;
import com.dgsoft.erp.model.api.ResCount;
import com.dgsoft.erp.model.api.StoreResPriceEntity;
import org.hibernate.annotations.GenericGenerator;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.math.BigDecimal;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * OrderItem generated by hbm2java
 */
@Entity
@Table(name = "ORDER_ITEM", catalog = "MINI_ERP")
public class OrderItem extends StoreResPriceEntity
        implements java.io.Serializable {

    public enum MiddleMoneyCalcType {
        COUNT_FIX, MONEY_RATE;
    }

    private String id;
    private StoreRes storeRes;
    private ResUnit middleUnit;
    private ResUnit resUnit;
    private NeedRes needRes;
    private BigDecimal count;
    private BigDecimal money;
    private BigDecimal rebate;
    private BigDecimal middleMoney;
    private BigDecimal middleRate;
    private MiddleMoneyCalcType middleMoneyCalcType;
    private String memo;

    public OrderItem() {
    }

    public OrderItem(Res res, Map<String, Set<Object>> formatHistory, List<BigDecimal> floatConvertRateHistory, ResUnit defaultUnit) {
        super(res, formatHistory, floatConvertRateHistory, defaultUnit);
    }

    public OrderItem(StoreRes storeRes, Map<String, Set<Object>> formatHistory, List<BigDecimal> floatConvertRateHistory, ResUnit defaultUnit) {
        super(storeRes, formatHistory, floatConvertRateHistory, defaultUnit);
    }

    public OrderItem(NeedRes needRes, StoreRes storeRes,
                     ResUnit resUnit, BigDecimal count, BigDecimal money, BigDecimal rebate, String memo) {
        this.storeRes = storeRes;
        this.resUnit = resUnit;
        this.count = count;
        this.money = money;
        this.rebate = rebate;
        this.needRes = needRes;
        this.memo = memo;
    }

    public OrderItem(NeedRes needRes, StoreRes storeRes) {
        this.storeRes = storeRes;
        this.needRes = needRes;
    }

    public OrderItem(StoreRes storeRes, ResUnit resUnit,
                     BigDecimal count, BigDecimal money, BigDecimal rebate) {
        this.storeRes = storeRes;
        this.resUnit = resUnit;
        this.count = count;
        this.money = money;
        this.rebate = rebate;
    }

    @Id
    @Column(name = "ID", unique = true, nullable = false, length = 32)
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid.hex")
    @NotNull
    @Size(max = 32)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @ManyToOne(optional = true, fetch = FetchType.LAZY)
    @JoinColumn(name = "STORE_RES", nullable = true)
    public StoreRes getStoreRes() {
        return this.storeRes;
    }

    public void setStoreRes(StoreRes storeRes) {
        this.storeRes = storeRes;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MIDDLE_UNIT", nullable = true)
    public ResUnit getMiddleUnit() {
        return middleUnit;
    }

    public void setMiddleUnit(ResUnit middleUnit) {
        this.middleUnit = middleUnit;
    }


    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "MONEY_UNIT", nullable = false)
    @NotNull
    public ResUnit getResUnit() {
        return resUnit;
    }

    public void setResUnit(ResUnit moneyUnit) {
        this.resUnit = moneyUnit;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "NEED_RES", nullable = false)
    @NotNull
    public NeedRes getNeedRes() {
        return this.needRes;
    }

    public void setNeedRes(NeedRes needRes) {
        this.needRes = needRes;
    }

    @Column(name = "COUNT", nullable = false, scale = 4)
    @NotNull
    public BigDecimal getCount() {
        return this.count;
    }

    public void setCount(BigDecimal count) {
        this.count = count;
    }

    @Column(name = "MONEY", nullable = false, scale = 3)
    @NotNull
    public BigDecimal getMoney() {
        return this.money;
    }

    public void setMoney(BigDecimal money) {
        this.money = money;
    }

    @Column(name = "REBATE", nullable = false, scale = 4)
    @NotNull
    public BigDecimal getRebate() {
        return this.rebate;
    }

    public void setRebate(BigDecimal rebate) {
        this.rebate = rebate;
    }

    @Column(name = "MIDDLE_MONEY", nullable = true, scale = 3)
    public BigDecimal getMiddleMoney() {
        return this.middleMoney;
    }

    public void setMiddleMoney(BigDecimal middleMoney) {
        this.middleMoney = middleMoney;
    }

    @Column(name = "MIDDLE_RATE", nullable = true, scale = 4)
    public BigDecimal getMiddleRate() {
        return this.middleRate;
    }

    public void setMiddleRate(BigDecimal middleRate) {
        this.middleRate = middleRate;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "MIDDLE_CALC_TYPE", nullable = true)
    public MiddleMoneyCalcType getMiddleMoneyCalcType() {
        return middleMoneyCalcType;
    }

    public void setMiddleMoneyCalcType(MiddleMoneyCalcType middleMoneyCalcType) {
        this.middleMoneyCalcType = middleMoneyCalcType;
    }

    @Column(name = "MEMO", nullable = true, length = 200)
    @Size(max = 200)
    public String getMemo() {
        return memo;
    }

    public void setMemo(String memo) {
        this.memo = memo;
    }

    @Transient
    public OrderItem cloneNew() {
        OrderItem result;
        result = new OrderItem(getNeedRes(), getStoreRes(), getResUnit(), getCount(), getMoney(), getRebate(), getMemo());

        return result;
    }

}
