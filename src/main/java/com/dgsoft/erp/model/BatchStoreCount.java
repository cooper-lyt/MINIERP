package com.dgsoft.erp.model;
// Generated Oct 17, 2013 5:33:51 PM by Hibernate Tools 4.0.0

import org.hibernate.annotations.GenericGenerator;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * BatchStoreCount generated by hbm2java
 */
@Entity
@Table(name = "BATCH_STORE_COUNT", catalog = "MINI_ERP")
public class BatchStoreCount implements java.io.Serializable {

    private String id;
    private Integer version;
    private Batch batch;
    private Stock stock;
    private BigDecimal count;
    private Set<Depositary> depositaries = new HashSet<Depositary>(0);
    private Set<NoConvertCount> noConvertCounts = new HashSet<NoConvertCount>(0);

    public BatchStoreCount() {
    }

    public BatchStoreCount(Batch batch, Stock stock, BigDecimal count) {
        this.id = id;
        this.batch = batch;
        this.stock = stock;
        this.count = count;
    }

    @Id
    @Column(name = "ID", unique = true, nullable = false, length = 32)
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid.hex")
    @NotNull
    @Size(max = 32)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Version
    @Column(name = "VERSION")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @OneToOne(optional = false, fetch = FetchType.EAGER, cascade = {CascadeType.MERGE, CascadeType.REFRESH, CascadeType.PERSIST})
    @JoinColumn(name = "BATCH", nullable = false)
    @NotNull
    public Batch getBatch() {
        return this.batch;
    }

    public void setBatch(Batch batch) {
        this.batch = batch;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STOCK", nullable = false)
    @NotNull
    public Stock getStock() {
        return this.stock;
    }

    public void setStock(Stock stock) {
        this.stock = stock;
    }

    @Column(name = "COUNT", nullable = false, scale = 4)
    @NotNull
    public BigDecimal getCount() {
        return this.count;
    }

    public void setCount(BigDecimal count) {
        this.count = count;
    }

    @ManyToMany(fetch = FetchType.LAZY, mappedBy = "batchStoreCounts")
    public Set<Depositary> getDepositaries() {
        return this.depositaries;
    }

    public void setDepositaries(Set<Depositary> depositaries) {
        this.depositaries = depositaries;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "batchStoreCount")
    public Set<NoConvertCount> getNoConvertCounts() {
        return this.noConvertCounts;
    }

    public void setNoConvertCounts(Set<NoConvertCount> noConvertCounts) {
        this.noConvertCounts = noConvertCounts;
    }

}
