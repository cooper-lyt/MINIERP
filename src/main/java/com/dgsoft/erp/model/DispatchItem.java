package com.dgsoft.erp.model;
// Generated Oct 30, 2013 1:46:18 PM by Hibernate Tools 4.0.0

import com.dgsoft.erp.model.api.ResCount;
import com.dgsoft.erp.model.api.StoreResCount;
import com.dgsoft.erp.model.api.StoreResCountEntity;
import org.hibernate.annotations.GenericGenerator;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.math.BigDecimal;

/**
 * DispatchItem generated by hbm2java
 */
@Entity
@Table(name = "DISPATCH_ITEM", catalog = "MINI_ERP")
public class DispatchItem extends StoreResCountEntity implements java.io.Serializable {

    private String id;
    private BigDecimal masterCount;
    private Dispatch dispatch;
    private StoreRes storeRes;
    private String memo;

    public DispatchItem() {
    }


    public DispatchItem(BigDecimal masterCount, Dispatch dispatch,
                        StoreRes storeRes) {
        this.masterCount = masterCount;
        this.dispatch = dispatch;
        this.storeRes = storeRes;
    }

    @Id
    @Column(name = "ID", unique = true, nullable = false, length = 32)
    @GeneratedValue(generator = "system-uuid")
    @GenericGenerator(name = "system-uuid", strategy = "uuid.hex")
    @NotNull
    @Size(max = 32)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Column(name = "COUNT", scale = 4, nullable = false)
    @NotNull
    public BigDecimal getMasterCount() {
        return this.masterCount;
    }

    public void setMasterCount(BigDecimal masterCount) {
        this.masterCount = masterCount;
    }

    @ManyToOne(optional = false, fetch = FetchType.LAZY)
    @JoinColumn(name = "DISPATCH", nullable = false)
    @NotNull
    public Dispatch getDispatch() {
        return dispatch;
    }

    public void setDispatch(Dispatch dispatch) {
        this.dispatch = dispatch;
    }


    @ManyToOne(optional = true, fetch = FetchType.LAZY)
    @JoinColumn(name = "STORE_RES")
    @NotNull
    public StoreRes getStoreRes() {
        return storeRes;
    }

    public void setStoreRes(StoreRes storeRes) {
        this.storeRes = storeRes;
    }

    @Column(name="MEMO",nullable = true,length = 200)
    public String getMemo() {
        return memo;
    }

    public void setMemo(String memo) {
        this.memo = memo;
    }

    @Transient
    public Stock getStock() {
        for (Stock stock : getStoreRes().getStocks()) {
            if (stock.getStore().getId().equals(getDispatch().getStore().getId())) {
                return stock;
            }
        }
        return null;
    }


    @Transient
    public boolean isEnough() {
        return getStock().getMasterCount().compareTo(getMasterCount()) >= 0;
    }


    @Transient
    public StoreResCount getDisparity() {
        return new StoreResCount(getStoreRes(),getMasterCount().subtract(getStock().getMasterCount()));
    }
}
