<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:c="http://java.sun.com/jstl/core"
                xmlns:rich="http://richfaces.org/rich" xmlns:a="http://richfaces.org/a4j"
                template="/layout/full-template.xhtml">


    <ui:define name="func-body">
        <h:form>

            <rich:collapsiblePanel switchType="client" header="#{messages.search_conditions}">


                <f:facet name="headerExpanded">
                    <s:link id="reset" value="#{messages.resetCondition}" includePageParams="false"
                            style="float: left; padding-top: 5px; font-size: 13px; font-weight: bold"/>


                    <s:link style="float: right;margin-right: 5px" styleClass="norbtn" view="/home.xhtml">
                        #{messages.return}
                    </s:link>

                </f:facet>

                <f:facet name="headerCollapsed">


                    <h:outputText value="#{messages.search_conditions}"
                                  style="float: left; padding-top: 5px; font-size: 13px; font-weight: bold"/>


                    <s:link style="float: right;margin-right: 5px" styleClass="norbtn" view="/home.xhtml">
                        #{messages.return}
                    </s:link>
                </f:facet>


                <s:decorate template="/layout/seam-display.xhtml">
                    <ui:define name="label">#{messages.Store}</ui:define>


                    <h:selectOneMenu label="#{messages.Store}" value="#{stockStoreResList.storeId}"
                                     rendered="#{not s:hasRole('erp.storage.manager')}">
                        <s:selectItems value="#{myStores}" var="_store" itemValue="#{_store.id}"
                                       label="#{_store.name}" noSelectionLabel="#{messages.noSelectLabel}"/>
                        <a:ajax event="change" execute="@this" render="searchBtn">
                            <a:attachQueue requestDelay="0"/>
                        </a:ajax>
                    </h:selectOneMenu>


                    <h:selectOneMenu value="#{stockStoreResList.storeId}" label="#{messages.Store}"
                                     rendered="#{s:hasRole('erp.storage.manager')}">
                        <s:selectItems value="#{allStoreList}" var="_store" label="#{_store.name}"
                                       itemValue="#{_store.id}" noSelectionLabel="#{messages.noSelectLabel}"/>
                        <a:ajax event="change" execute="@this" render="searchBtn">
                            <a:attachQueue requestDelay="0"/>
                        </a:ajax>
                    </h:selectOneMenu>

                </s:decorate>


                <s:decorate template="/layout/seam-display.xhtml">
                    <ui:define name="label">#{messages.storeChangeDate}</ui:define>

                    <rich:calendar
                            enableManualInput="true"
                            inputSize="10"
                            timeZone="#{calendarBean.timeZone}" locale="#{calendarBean.locale}"
                            showApplyButton="#{calendarBean.showApply}" popup="#{calendarBean.popup}"
                            datePattern="#{messages.datePattern}"
                            label="#{messages.storeChangeDate}"
                            value="#{searchDateArea.dateTo}">
                    </rich:calendar>
                </s:decorate>


                <ui:include src="/layout/erp/res/StoreResCondition.xhtml"/>

                <div style="clear: both;"/>


                <a:outputPanel id="searchBtn" layout="block" styleClass="searchButtons">

                    <h:commandLink styleClass="btn-link-big" disabled="#{ empty stockStoreResList.storeId}">
                        <span class="octicon octicon-search"/>
                        #{messages.search}
                        <a:attachQueue requestDelay="0"/>
                    </h:commandLink>
                </a:outputPanel>


            </rich:collapsiblePanel>

        </h:form>
        <br/>


        <a:outputPanel id="totalResultDatas">
<f:subview id="dataView">
            <c:if test="#{not empty stockStoreResList.storeId}">

            <a:outputPanel rendered="#{not empty stockStoreResList.storeId}">
                <div style="width: 100%; max-height: 700px; overflow-x: auto; overflow-y: auto; padding: 0; margin: 0">

                    <rich:dataTable rendered="#{not empty stockStoreResList.storeId}" style="table-layout: fixed;" styleClass="bigTable"
                                    value="#{storeChangeTotal.resultGroup}" var="_resGroup"
                                    noDataLabel="#{messages.NoConditionStock}">
                        <f:facet name="header">
                            <rich:columnGroup>
                                <rich:column rowspan="2" colspan="3" style="min-width: 180px">
                                    #{messages.StoreRes}
                                </rich:column>
                                <rich:column rowspan="2" colspan="2" style="min-width: 155px">
                                    #{messages.SeasonBiginCount}
                                </rich:column>
                                <rich:column colspan="#{(storeChangeTotal.storeInTypes.size + 1) * 2}"
                                             rendered="#{ (not empty storeChangeTotal.storeInTypes)  }">
                                    #{messages.storeIn}
                                </rich:column>
                                <rich:column
                                        colspan="#{(storeChangeTotal.storeOutTypes.size + storeChangeTotal.allocationOutStores.size + 1) * 2}"
                                        rendered="#{((not empty storeChangeTotal.storeOutTypes) or (not empty storeChangeTotal.allocationOutStores))}">
                                    #{messages.storeOut}
                                </rich:column>
                                <rich:column rowspan="2" colspan="2" style="min-width: 150px">
                                    #{messages.InventoryLastCount}
                                </rich:column>
                                <rich:column rowspan="2" colspan="2" style="min-width: 150px">
                                    #{messages.STORE_CHECK_ADD}
                                </rich:column>
                                <rich:column rowspan="2" colspan="2" style="min-width: 150px">
                                    #{messages.STORE_CHECK_LOSS}
                                </rich:column>
                                <rich:column rowspan="2" colspan="2" style="min-width: 150px">
                                    #{messages.InventoryEndCount}
                                </rich:column>


                                <c:forEach items="#{storeChangeTotal.storeInTypes}" var="_type">
                                    <rich:column colspan="2" breakRowBefore="#{_type eq storeChangeTotal.firstInType}"
                                                 style="min-width: 150px">
                                        #{messages[_type.name()]}
                                    </rich:column>

                                </c:forEach>

                                <rich:column colspan="2" rendered="#{not empty storeChangeTotal.storeInTypes}"
                                             style="min-width: 160px">
                                    #{messages.GroupTotal}
                                </rich:column>

                                <c:forEach items="#{storeChangeTotal.storeOutTypes}" var="_type">
                                    <rich:column colspan="2" style="min-width: 150px"
                                                 breakRowBefore="#{(_type eq storeChangeTotal.firstOutType) and (empty storeChangeTotal.storeInTypes)}">
                                        #{messages[_type.name()]}
                                    </rich:column>
                                </c:forEach>
                                <c:forEach items="#{storeChangeTotal.allocationOutStores}" var="_store">
                                    <rich:column colspan="2" style="min-width: 150px"
                                                 breakRowBefore="#{(empty storeChangeTotal.storeOutTypes) and (storeChangeTotal.isFirstStore(_store.id)) }">
                                        #{messages.AllocationTo}#{_store.name}
                                    </rich:column>
                                </c:forEach>
                                <rich:column colspan="2" style="min-width: 160px"
                                             rendered="#{(not empty storeChangeTotal.storeOutTypes) or (not empty storeChangeTotal.allocationOutStores)}">
                                    #{messages.GroupTotal}
                                </rich:column>

                            </rich:columnGroup>
                        </f:facet>

                        <rich:column colspan="3"
                                     style="min-width: 180px;font-size: 14px;font-weight: bold;background: #ecf4fe;">
                            <rich:collapsibleSubTableToggler for="sbtbFormat"/>
                            #{_resGroup.key.name}
                        </rich:column>


                        <ui:include src="/layout/erp/InventoryDataColumns.xhtml">
                            <ui:param name="inventoryItemsBean" value="#{storeChangeTotal}"/>
                            <ui:param name="data" value="#{_resGroup.totalData}"/>
                            <ui:param name="res" value="#{_resGroup.key}"/>
                            <ui:param name="columnStyle"
                                      value="font-size: 14px;font-weight: bold;background: #ecf4fe;"/>
                        </ui:include>


                        <rich:collapsibleSubTable value="#{_resGroup.childGroup}" var="_formatGroup" id="sbtbFormat">
                            <rich:column
                                    style="#{(_formatGroup.key.res.unitGroup.type eq 'FLOAT_CONVERT') ? 'font-size: 13px; font-weight: bold;background:#f5f5f5;' : ''}"/>
                            <rich:column colspan="2"
                                         style="#{(_formatGroup.key.res.unitGroup.type eq 'FLOAT_CONVERT') ? 'font-size: 13px; font-weight: bold;background:#f5f5f5;' : ''}">
                                <rich:collapsibleSubTableToggler for="sbtbItem"
                                                                 rendered="#{_formatGroup.key.res.unitGroup.type eq 'FLOAT_CONVERT'}"/>

                                <ui:insert name="formatTitleColumn">
                                    #{_formatGroup.key.formatTitle}
                                </ui:insert>

                            </rich:column>


                            <ui:include src="/layout/erp/InventoryDataColumns.xhtml">
                                <ui:param name="inventoryItemsBean" value="#{storeChangeTotal}"/>
                                <ui:param name="data" value="#{_formatGroup.totalData}"/>
                                <ui:param name="res" value="#{_formatGroup.key.res}"/>
                                <ui:param name="columnStyle"
                                          value="#{(_formatGroup.key.res.unitGroup.type eq 'FLOAT_CONVERT') ? 'font-size: 13px; font-weight: bold;background:#f5f5f5;' : ''}"/>
                            </ui:include>


                            <rich:collapsibleSubTable value="#{_formatGroup.values}" var="_item" id="sbtbItem"
                                                      rendered="#{_formatGroup.key.res.unitGroup.type eq 'FLOAT_CONVERT'}">
                                <rich:column style="width: 1px;"/>
                                <rich:column style="width: 1px;"/>
                                <rich:column>
                                    <ui:insert name="itemTitleComumn">
                                        <h:outputText value="#{_item.storeRes.floatConversionRate}">
                                            <f:convertNumber pattern="#{_item.res.unitGroup.floatConvertRateFormat}"/>
                                        </h:outputText>
                                        <h:outputText value="#{_item.res.unitGroup.name}"/>
                                    </ui:insert>
                                </rich:column>

                                <ui:include src="/layout/erp/InventoryDataColumns.xhtml">
                                    <ui:param name="data" value="#{_item}"/>
                                    <ui:param name="res" value="#{_item.res}"/>
                                    <ui:param name="inventoryItemsBean" value="#{storeChangeTotal}"/>
                                </ui:include>


                            </rich:collapsibleSubTable>

                        </rich:collapsibleSubTable>

                    </rich:dataTable>
                </div>
            </a:outputPanel>
            </c:if>
</f:subview>
        </a:outputPanel>

    </ui:define>

</ui:composition>