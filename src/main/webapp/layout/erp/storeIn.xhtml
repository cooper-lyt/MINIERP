<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:rich="http://richfaces.org/rich" xmlns:a="http://richfaces.org/a4j"
                template="/layout/full-template.xhtml">

<ui:define name="toolbar">
    <h:outputStylesheet>
        .barsearch {
            height: 14px;
            width: 100px;
        }

        .rf-au-lst-scrl {
            width: 80px !important;
        }

        .autoCompletePopupHieght {
            width: 80px !important;
        }
    </h:outputStylesheet>


    <s:decorate template="/layout/erp/res/ResSelectModelPanel.xhtml">
        <ui:param name="panelId" value="resSelectPanel"/>
        <ui:param name="treeValue" value="#{storeResTreeValue}"/>
        <ui:param name="panelTitle" value="#{messages.res}"/>
        <ui:define name="categoryNode">
            <a:commandLink execute="@this" render="storeInItem" value="#{_node.data.name}"
                           oncomplete="#{rich:component('resSelectPanel')}.hide()"
                           style="#{_node.data.enable ? '' : 'text-decoration:line-through; color: red;'}"
                           action="#{sotreInAction.resCategorySelected}">
                <a:param value="#{_node.data.id}" assignTo="#{resCategoryHome.id}"/>
                <s:conversationId/>
            </a:commandLink>
        </ui:define>

        <ui:define name="resNode">

            <a:commandLink execute="@this" render="storeInItem" action="#{sotreInAction.resSelected}"
                           value=" #{_node.data.name}(#{_node.data.code})"
                           oncomplete="#{rich:component('resSelectPanel')}.hide()"
                           style="#{_node.data.enable ? '' : 'text-decoration:line-through; color: red;'}">
                <a:param value="#{_node.data.id}" assignTo="#{resHome.id}"/>
                <s:conversationId/>
            </a:commandLink>

        </ui:define>

        <ui:define name="storeResNode">
            <a:commandLink execute="@this" render="storeInItem" action="#{sotreInAction.storeResSelected}"
                           value="#{_node.data.code}#{' '}#{ _node.showTitle}" oncomplete="#{rich:component('resSelectPanel')}.hide()">
                <a:param value="#{_node.data.id}" assignTo="#{storeResHome.id}"/>
                <s:conversationId/>
            </a:commandLink>

        </ui:define>
    </s:decorate>

    <rich:toolbar height="26">

        <rich:toolbarGroup>
            <h:form>
                <h:panelGrid id="resSearchForm" columns="4">

                    <h:inputText styleClass="barsearch" id="resItemCode" value="#{resLocate.code}"
                                 required="true">
                        <rich:placeholder value="#{messages.res_field_code}"/>
                    </h:inputText>


                    <a:commandButton value="#{messages.search}" execute="@region"
                                     render="storeInItem,resSearchForm"
                                     action="#{sotreInAction.locateByCode}">
                        <a:attachQueue requestDelay="0"/>
                    </a:commandButton>


                    <a:commandButton image="/img/onetomany.gif" execute="@this" immediate="true"
                                     title="#{messages.storeResSelect}"
                                     onclick="#{rich:component('resSelectPanel')}.show();return false;">
                        <a:attachQueue requestDelay="0"/>
                    </a:commandButton>
                </h:panelGrid>
            </h:form>
        </rich:toolbarGroup>

        <rich:toolbarGroup location="right">
            <h:form>
                <h:panelGrid columns="5">
                    <h:inputText id="storeOrderCodeInput"
                                 required="true"
                                 maxlength="32"
                                 styleClass="barsearch"
                                 valueChangeListener="#{stockChangeHome.verifyIdAvailable}"
                                 label="#{messages.storeIn_field_id}"
                                 value="#{stockChangeHome.instance.id}">
                        <rich:placeholder value="#{messages.storeIn_field_id}"/>
                        <rich:validator/>
                    </h:inputText>
                    <rich:message for="storeOrderCodeInput" styleClass="message-icon"
                                  showDetail="true" showSummary="true" tooltip="true"/>

                    <ui:insert name="commanButton">
                    </ui:insert>

                </h:panelGrid>
            </h:form>

        </rich:toolbarGroup>

    </rich:toolbar>

</ui:define>

<ui:define name="body">

    <s:decorate template="/layout/edit-modalpanel.xhtml">
        <ui:param name="panelTitle" value="#{messages.storeRes_field_code}"/>
        <ui:param name="panelId" value="newStoreResCodeInputPanel"/>
        <ui:define name="controls">
        </ui:define>


        <s:decorate template="/layout/edit.xhtml">
            <ui:define name="label">#{messages.storeRes_field_code}</ui:define>
            <h:inputText label="#{messages.storeRes_field_code}"
                         required="true" size="27" maxlength="50"
                         value="#{sotreInAction.editStockInItem.code}"/>
        </s:decorate>

        <ui:define name="actionButtons">
            <a:commandButton immediate="true"
                             execute="@this" value="#{messages.cancel}"
                             oncomplete="#{rich:component('newStoreResCodeInputPanel')}.hide(); return false;">
                <a:param value="" assignTo="#{sotreInAction.editStockInItem.code}"/>
                <a:attachQueue requestDelay="0"/>
            </a:commandButton>
            <a:commandButton value="#{messages.addItem}" execute="@form"
                             action="#{sotreInAction.addItem}" data="#{sotreInAction.addItemLastState}"
                             oncomplete="if (event.data == 'added')#{rich:component('newStoreResCodeInputPanel')}.hide();"
                             render="newStoreResCodeInputPanel_inputs,storeInItem,storeInItems">
                <a:attachQueue requestDelay="0"/>
            </a:commandButton>

        </ui:define>

    </s:decorate>

    <h:form id="storeInItem">
        <rich:panel rendered="#{resCategoryHome.idDefined or (not (empty sotreInAction.editStockInItem))}">
            <a:outputPanel rendered="#{resCategoryHome.idDefined}">
                <h:panelGrid columns="1">
                    <h:outputText value="#{resCategoryHome.instance.name}" styleClass="auto_width_name"/>
                </h:panelGrid>


                <s:decorate template="/layout/seam-edit.xhtml">
                    <ui:define name="label">#{messages.res}</ui:define>
                     <h:selectOneMenu value="#{resHome.id}" required="true" label="#{messages.res}">
                          <s:selectItems value="#{resCategoryHome.reses}" var="_res"
                                         label="#{_res.name}" itemValue="#{_res.id}"
                                         noSelectionLabel="#{messages.noSelectLabel}"/>
                         <a:ajax event="valueChange" listener="#{sotreInAction.resChange}" render="storeInItem"/>
                     </h:selectOneMenu>
                </s:decorate>
            </a:outputPanel>

            <a:outputPanel rendered="#{not (empty sotreInAction.editStockInItem)}">

                <ui:include src="/layout/erp/res/StoreResCountInput.xhtml">
                    <ui:param name="inputValue" value="#{sotreInAction.editStockInItem}"/>
                    <ui:param name="formatTemplate" value="/layout/seam-edit.xhtml"/>
                    <ui:param name="countLableStyleClass" value="name"/>
                    <ui:param name="showTitle" value="false"/>
                </ui:include>


                <ui:insert name="addItemAction">

                        <!-- TODO BATCH -->





                    <a:commandButton style="float: left;" value="#{messages.addItem}" execute="@form"
                                     render="storeInItem,storeInItems,newStoreResCodeInputPanel_inputs"
                                     data="#{sotreInAction.addItemLastState}"
                                     oncomplete="if (event.data == 'code_not_set')#{rich:component('newStoreResCodeInputPanel')}.show();"
                                     action="#{sotreInAction.addItem}">
                        <a:attachQueue requestDelay="0"/>

                    </a:commandButton>
                </ui:insert>
            </a:outputPanel>

            <div style="clear:both">
                <span class="required">*</span>
                #{messages.requiredFields}
            </div>


        </rich:panel>
    </h:form>

    <br/>
    <ui:insert name="storeInItemList">
        <h:form id="storeInItems">
            <rich:dataTable style="width: 100%" value="#{storeInItemsDataModal}"
                            var="_item">
                <rich:column>
                    <f:facet name="header">
                        #{messages.StoreRes}
                    </f:facet>

                    <ui:include src="/layout/erp/StoreResTitle.xhtml">
                        <ui:param name="storeRes" value="#{_item.storeRes}"/>
                    </ui:include>


                </rich:column>



                <rich:column>
                    <f:facet name="header">
                        #{messages.MasterUnitCount}
                    </f:facet>
                    <h:outputText value="#{_item.displayMasterCount}">
                    </h:outputText>

                </rich:column>

                <rich:column>
                    <f:facet name="header">
                        #{messages.AuxUnitCount}
                    </f:facet>
                    #{_item.displayAuxCount}

                </rich:column>
                <rich:column style="width: 20px;text-align: center;">
                    <f:facet name="header">

                    </f:facet>


                    <a:commandButton title="#{messages.remove}" execute="@form" immediate="true" image="/img/delete.png"
                                     action="#{sotreInAction.removeItem}" render="storeInItems">
                        <a:attachQueue requestDelay="0"/>
                    </a:commandButton>
                </rich:column>
            </rich:dataTable>
        </h:form>
    </ui:insert>

</ui:define>

</ui:composition>