<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:rich="http://richfaces.org/rich" xmlns:a="http://richfaces.org/a4j">



    <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/resources/collapsible-subtable.js"/>
<rich:dataTable value="#{inventoryItems.resultGroup}" var="_resGroup" noDataLabel="#{messages.NoConditionStock}">
<f:facet name="header">
    <rich:columnGroup>
        <rich:column rowspan="2" colspan="3" style="min-width: 200px">
            #{messages.StoreRes}
        </rich:column>
        <rich:column rowspan="2" colspan="2" style="min-width: 180px">
            #{messages.SeasonBiginCount}
        </rich:column>
        <rich:column colspan="#{(inventoryItems.storeInTypes.size + 1) * 2}"
                     rendered="#{ (not empty inventoryItems.storeInTypes) and inventoryItems.showInOutCount }">
            #{messages.storeIn}
        </rich:column>
        <rich:column
                colspan="#{(inventoryItems.storeOutTypes.size + inventoryItems.allocationOutStores.size + 1) * 2}"
                rendered="#{inventoryItems.showInOutCount and ((not empty inventoryItems.storeOutTypes) or (not empty inventoryItems.allocationOutStores))}">
            #{messages.storeOut}
        </rich:column>
        <rich:column rowspan="2" colspan="2" style="min-width: 180px">
            #{messages.InventoryLastCount}
        </rich:column>
        <rich:column rowspan="2" colspan="2" style="min-width: 150px">
            #{messages.STORE_CHECK_ADD}
        </rich:column>
        <rich:column rowspan="2" colspan="2" style="min-width: 150px">
            #{messages.STORE_CHECK_LOSS}
        </rich:column>
        <rich:column rowspan="2" colspan="2" style="min-width: 180px">
            #{messages.InventoryEndCount}
        </rich:column>

        <c:if test="#{inventoryItems.showInOutCount}">
        <c:forEach items="#{inventoryItems.storeInTypes}" var="_type">
            <rich:column colspan="2" breakRowBefore="#{_type eq inventoryItems.firstInType}" style="min-width: 150px">
                #{messages[_type.name()]}
            </rich:column>

        </c:forEach>

        <rich:column colspan="2" rendered="#{not empty inventoryItems.storeInTypes}" style="min-width: 160px">
            #{messages.GroupTotal}
        </rich:column>

        <c:forEach items="#{inventoryItems.storeOutTypes}" var="_type">
            <rich:column colspan="2"  style="min-width: 150px"
                         breakRowBefore="#{(_type eq inventoryItems.firstOutType) and (empty inventoryItems.storeInTypes)}">
                #{messages[_type.name()]}
            </rich:column>
        </c:forEach>
        <c:forEach items="#{inventoryItems.allocationOutStores}" var="_store">
            <rich:column colspan="2"  style="min-width: 150px"
                         breakRowBefore="#{(empty inventoryItems.storeOutTypes) and (inventoryItems.isFirstStore(_store.id)) }">
                #{messages.AllocationTo}#{_store.name}
            </rich:column>
        </c:forEach>
        <rich:column colspan="2" style="min-width: 160px"
                     rendered="#{(not empty inventoryItems.storeOutTypes) or (not empty inventoryItems.allocationOutStores)}">
            #{messages.GroupTotal}
        </rich:column>
        </c:if>
    </rich:columnGroup>
</f:facet>

<rich:column colspan="3" style="font-size: 14px;font-weight: bold;background: #ecf4fe;">
    <rich:collapsibleSubTableToggler for="sbtbFormat"/>
    #{_resGroup.key.name}
</rich:column>


<ui:include src="InventoryDataColumns.xhtml">
    <ui:param name="data" value="#{_resGroup.totalData}"/>
    <ui:param name="res" value="#{_resGroup.key}"/>
    <ui:param name="columnStyle" value="font-size: 14px;font-weight: bold;background: #ecf4fe;"/>
</ui:include>



<rich:collapsibleSubTable value="#{_resGroup.childGroup}" var="_formatGroup" id="sbtbFormat">
<rich:column style="#{(_formatGroup.key.res.unitGroup.type eq 'FLOAT_CONVERT') ? 'font-size: 13px; font-weight: bold;background:#f5f5f5;' : ''}" />
<rich:column colspan="2" style="#{(_formatGroup.key.res.unitGroup.type eq 'FLOAT_CONVERT') ? 'font-size: 13px; font-weight: bold;background:#f5f5f5;' : ''}">
    <rich:collapsibleSubTableToggler for="sbtbItem"
                                     rendered="#{_formatGroup.key.res.unitGroup.type eq 'FLOAT_CONVERT'}"/>

    <ui:insert name="formatTitleColumn">
        #{_formatGroup.key.formatTitle}
    </ui:insert>

</rich:column>


<ui:include src="InventoryDataColumns.xhtml">
    <ui:param name="data" value="#{_formatGroup.totalData}"/>
    <ui:param name="res" value="#{_formatGroup.key.res}"/>
    <ui:param name="columnStyle" value="#{(_formatGroup.key.res.unitGroup.type eq 'FLOAT_CONVERT') ? 'font-size: 13px; font-weight: bold;background:#f5f5f5;' : ''}"/>
</ui:include>



<rich:collapsibleSubTable value="#{_formatGroup.values}" var="_item" id="sbtbItem"
                          rendered="#{_formatGroup.key.res.unitGroup.type eq 'FLOAT_CONVERT'}">
    <rich:column style="width: 1px;"/>
    <rich:column style="width: 1px;"/>
    <rich:column>
        <ui:insert name="itemTitleComumn">
        <h:outputText value="#{_item.storeRes.floatConversionRate}">
            <f:convertNumber pattern="#{_item.res.unitGroup.floatConvertRateFormat}"/>
        </h:outputText>
        <h:outputText value="#{_item.res.unitGroup.name}"/>
        </ui:insert>
    </rich:column>

    <ui:include src="InventoryDataColumns.xhtml">
        <ui:param name="data" value="#{_item}"/>
        <ui:param name="res" value="#{_item.res}"/>
    </ui:include>


</rich:collapsibleSubTable>

</rich:collapsibleSubTable>

</rich:dataTable>

</ui:composition>