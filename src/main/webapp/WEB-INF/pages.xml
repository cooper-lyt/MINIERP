<?xml version="1.0" encoding="UTF-8"?>
<pages xmlns="http://jboss.org/schema/seam/pages"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       no-conversation-view-id="/home.xhtml"
       login-view-id="/login.xhtml">


    <page view-id="*">
        <navigation>
            <rule if-outcome="home">
                <redirect view-id="/home.xhtml"/>
            </rule>
        </navigation>

        <navigation from-action="#{identity.logout}">
            <redirect view-id="/home.xhtml"/>
        </navigation>
    </page>

    <page view-id="/func/*" login-required="true">
    </page>

    <page view-id="/func/system/config/*" login-required="true">
        <restrict>#{s:hasRole('system.config')}</restrict>
    </page>

    <page view-id="/func/system/jbpm/*" login-required="true">
        <restrict>#{s:hasRole('system.config')}</restrict>
    </page>

    <page view-id="/func/system/manager/*" login-required="true">
        <restrict>#{s:hasRole('system.manager')}</restrict>
    </page>


    <page view-id="/business/taskOperator/*" login-required="true"
            no-conversation-view-id="/func/system/business/task.xhtml">
        <param name="from"/>

        <navigation>
            <rule if-outcome="taskCompleted" if="#{empty from}">
                <redirect include-page-params="true"
                          view-id="/func/system/business/task.xhtml">
                    <message severity="INFO">
                        #{messages.taskCompleted}
                    </message>
                </redirect>
            </rule>
            <rule if-outcome="taskCompleted" if="#{not empty from}">
                <redirect view-id="#{from}">
                    <message severity="INFO">
                        #{messages.taskCompleted}
                    </message>
                </redirect>
            </rule>
            <rule if-outcome="taskComplete" if="#{empty from}">
                <end-task/>
                <redirect include-page-params="true"
                          view-id="/func/system/business/task.xhtml">

                    <message severity="INFO">
                        #{messages.taskCompleted}
                    </message>
                </redirect>
            </rule>
            <rule if-outcome="taskComplete" if="#{not empty from}">
                <end-task/>
                <redirect view-id="#{from}">
                    <message severity="INFO">
                        #{messages.taskCompleted}
                    </message>
                </redirect>
            </rule>
        </navigation>
    </page>

    <page view-id="/business/startPrepare/*" login-required="true">
        <param name="from"/>
        <navigation>
            <rule if-outcome="businessCreated" if="#{empty from}">
                <end-conversation/>

                <redirect include-page-params="true" view-id="/func/system/business/start.xhtml">

                </redirect>
            </rule>
            <rule if-outcome="businessCreated" if="#{not empty from}">
                <end-conversation/>

                <redirect include-page-params="true" view-id="#{from}">

                </redirect>
            </rule>

        </navigation>
    </page>


    <page view-id="/func/erp/res/*" login-required="true">
        <restrict>
            #{s:hasRole('erp.produce.manager') or s:hasRole('erp.storage.manager')}
        </restrict>
    </page>

    <page view-id="/func/erp/store/*" login-required="true">
        <restrict>#{s:hasRole('erp.storage.store') or s:hasRole('erp.storage.manager')}</restrict>
    </page>

    <page view-id="/func/erp/product/mgr/*" login-required="true">
        <restrict>#{s:hasRole('erp.produce.manager')}</restrict>
    </page>

    <page view-id="/func/erp/product/*" login-required="true">
        <restrict>#{s:hasRole('erp.produce.manager') or s:hasRole('erp.produce.factory.mgr')}</restrict>
    </page>

    <page view-id="/func/erp/store/StoreMgr.xhtml" login-required="true">
        <restrict>#{s:hasRole('erp.storage.store')}</restrict>
    </page>

    <page view-id="/func/erp/sale/*" login-required="true">
        <restrict>#{s:hasRole('erp.sale.manager') or s:hasRole('erp.sale.saler') or s:hasRole('erp.finance.cashier') or s:hasRole('erp.finance.accountancy') }</restrict>
    </page>

    <page view-id="/func/erp/finance/accountancy/*" login-required="true">
        <restrict>#{s:hasRole('erp.finance.accountancy')}</restrict>
    </page>

    <page view-id="/func/erp/finance/cashier/*" login-required="true">
        <restrict>#{s:hasRole('erp.finance.cashier')}</restrict>
    </page>

    <page view-id="/func/erp/sale/mgr/*" login-required="true">
        <restrict>#{s:hasRole('erp.sale.manager')}</restrict>
    </page>

    <page view-id="/func/erp/transport/*" login-required="true">
        <restrict>#{s:hasRole('erp.transport.manager')}</restrict>
    </page>

    <page view-id="/func/erp/total/*" login-required="true">
        <restrict>#{s:hasRole('erp.sale.manager')}</restrict>
    </page>

    <page view-id="/func/erp/store/storeChange/*" login-required="true">
        <restrict>#{s:hasRole('erp.storage.store')}</restrict>

        <param name="from"/>

        <navigation>
            <rule if-outcome="ProcduceBeginStoreIn">

                <begin-conversation join="true"/>
                <redirect view-id="/func/erp/store/storeChange/ProduceStoreIn.xhtml"/>
            </rule>

            <rule if-outcome="ProcduceStoreInCancel">

                <end-conversation/>
                <redirect view-id="/func/erp/store/storeChange/ProduceIn.xhtml"/>
            </rule>

            <rule if-outcome="BeginOtherStockIn">
                <begin-conversation join="true"/>
                <redirect view-id="/func/erp/store/storeChange/OtherStoreIn.xhtml"/>
            </rule>

            <rule if-outcome="BeginOtherStockOut">
                <begin-conversation join="true"/>
                <redirect view-id="/func/erp/store/storeChange/OtherStoreOut.xhtml"/>
            </rule>

            <rule if-outcome="stockChangeComplete">
                <end-conversation/>
                <redirect view-id="/func/erp/store/storeChange/StockChangeComplete.xhtml"/>
            </rule>

            <rule if-outcome="OtherStockChangeCancel">
                <end-conversation/>
                <redirect view-id="/func/erp/store/storeChange/OtherStockChange.xhtml"/>
            </rule>

            <rule if-outcome="businessCreated" if="#{empty from}">
                <end-conversation/>

                <redirect include-page-params="true" view-id="/func/system/business/start.xhtml">

                </redirect>
            </rule>
            <rule if-outcome="businessCreated" if="#{not empty from}">
                <end-conversation/>

                <redirect include-page-params="true" view-id="#{from}">

                </redirect>
            </rule>
        </navigation>
    </page>

    <page view-id="/business/startPrepare/erp/sale/*" login-required="true">
        <restrict>#{s:hasRole('erp.sale.saler')}</restrict>

    </page>


    <exception class="org.jboss.seam.framework.EntityNotFoundException">
        <redirect view-id="/error.xhtml">
            <message severity="warn">#{messages['org.jboss.seam.framework.EntityNotFoundException']}</message>
        </redirect>
    </exception>

    <exception class="javax.persistence.EntityNotFoundException">
        <redirect view-id="/error.xhtml">
            <message severity="warn">#{messages['javax.persistence.EntityNotFoundException']}</message>
        </redirect>
    </exception>

    <exception class="javax.persistence.EntityExistsException">
        <redirect view-id="/error.xhtml">
            <message severity="warn">#{messages['javax.persistence.EntityExistsException']}</message>
        </redirect>
    </exception>

    <exception class="javax.persistence.OptimisticLockException">
        <end-conversation/>
        <redirect view-id="/error.xhtml">
            <message severity="warn">#{messages['javax.persistence.OptimisticLockException']}</message>
        </redirect>
    </exception>

    <exception class="org.jboss.seam.security.AuthorizationException">
        <redirect view-id="/error.xhtml">
            <message severity="error">#{messages['org.jboss.seam.security.AuthorizationException']}</message>
        </redirect>
    </exception>

    <exception class="org.jboss.seam.security.NotLoggedInException">
        <redirect view-id="/login.xhtml">
            <message severity="warn">#{messages['org.jboss.seam.NotLoggedIn']}</message>
        </redirect>
    </exception>

    <exception class="javax.faces.application.ViewExpiredException">
        <redirect view-id="/error.xhtml">
            <message severity="warn">#{messages['javax.faces.application.ViewExpiredException']}</message>
        </redirect>
    </exception>

    <exception class="org.jboss.seam.ConcurrentRequestTimeoutException" log-level="trace">
        <http-error error-code="503"/>
    </exception>

    <exception>
        <redirect view-id="/error.xhtml">
            <message severity="error">#{messages['UnexpectedError']}</message>
        </redirect>
    </exception>

    <exception class="com.dgsoft.common.exception.InitDataException">
        <redirect view-id="/error.xhtml">
            <message severity="error">#{messages['com.dgsoft.common.exception.InitDataException']}</message>
        </redirect>
    </exception>


    <exception class="com.dgsoft.common.exception.ProcessDefineException">
        <redirect view-id="/error.xhtml">
            <message severity="error">#{messages['com.dgsoft.common.exception.ProcessDefineException']}</message>
        </redirect>
    </exception>
</pages>
